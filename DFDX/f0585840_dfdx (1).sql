-- phpMyAdmin SQL Dump
-- version 5.1.1
-- https://www.phpmyadmin.net/
--
-- Хост: 10.0.0.57
-- Время создания: Фев 15 2022 г., 00:58
-- Версия сервера: 5.7.35-38
-- Версия PHP: 7.2.34

SET SQL_MODE = "NO_AUTO_VALUE_ON_ZERO";
START TRANSACTION;
SET time_zone = "+00:00";


/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8mb4 */;

--
-- База данных: `f0585840_dfdx`
--

-- --------------------------------------------------------

--
-- Структура таблицы `bd2`
--

CREATE TABLE `bd2` (
  `id` int(11) DEFAULT NULL,
  `name` varchar(200) COLLATE utf8_bin DEFAULT NULL,
  `news` mediumtext COLLATE utf8_bin,
  `login_redaktora` varchar(200) COLLATE utf8_bin DEFAULT NULL,
  `razdel` varchar(100) COLLATE utf8_bin DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin;

--
-- Дамп данных таблицы `bd2`
--

INSERT INTO `bd2` (`id`, `name`, `news`, `login_redaktora`, `razdel`) VALUES
(0, 'Комментарии в html.', 'Комментарии в html используются, как и в других языках программирования, хотя оный им не является, в основном для ведения пояснений к различным частям кода, или отдельных его строк. Так-же комментарии активно применяются при отладке кода программы, или страницы. В случае с разметкой html, комментарии можно использовать и для создания динамической страницы, разумеется, с использованием некоторого языка программирования, однако – это не самый эффективный способ управлять содержимым страницы. <br>\r\nВнимание!! Комментарий всегда виден на странице, если посмотреть её код с помощью браузера. <br>\r\n<br>\r\nКоротко: пояснение части кода, отладка страницы при верстке, создание динамической страницы, последнее лишь возможность. <br>\r\n<br>\r\nСинтаксис: &lt!—Текстовый комментарий--&gt <br>\r\n<br>\r\n<code>           <br>\r\nПривет мир 			&lt!- -Обычный текст--&gt <br>\r\n<b>                Привет мир </b> 		&lt!- -Жирный текст--&gt <br>\r\n</code> <br>\r\n#html3html5xhtml#', 'alfa54', 'html3html5xhtml'),
(2, '&lt!DOCTYPE&gt - объявление типа документа.', 'Данная конструкция, либо ключевое слово объявляет тип документа. Используется в самом начале страницы для того, чтобы браузер понимал, с каким типом документа он будет работать, либо загружать. Проще говоря, браузер должен знать страничка размечена по правилам HTML4, HTML5 или XHTML.<br>\r\n<br>\r\nВ разных типах документов, страничек, используются разные наборы тегов. Если Вы собираетесь создавать страничку с набором тегов HTML5 – это самый новый стандарт на момент написания статьи, то сообщить об этом браузеру можно указав в начале документа объявление:<br>\r\n<code>          <br>\r\n&lt!DOCTYPE html&gt<br>\r\n</code><br>\r\nЕсли по какой-то неизвестной причине Вы решите написать или разметить страницу на старом HTML4, то сообщить об этом браузеру можно будет следующим образом:<br>\r\n<code>          <br>\r\n&lt!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\"><br>\r\n</code><br>\r\nПродолжая тему гурманов, можно вспомнить и об XHTML, объявить который браузеру можно написав в начале страницы код ниже:<br>\r\n<code>          <br>\r\n&lt!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.1//EN\" \"http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd\"><br>\r\n</code><br>\r\nДанные объявления влияют на функционал страницы. Разные системы немного отличаются наборами тегов друг от друга. На пример тег APPLET присутствует только в HTML4, а тега AREA нет только в XHTML. Вряд ли есть какой-то смысл использовать старые разметки, но если у Вас вдруг такая необходимость появилась, то Вы всегда сможете узнать какой тег в какой системе работает, найдя его описание с помощью системы поиска на нашем сайте.<br>\r\n#html3html5xhtml#', 'alfa54', 'html3html5xhtml'),
(4, 'Функция : preg_filter().', 'Доброго всем времени суток. Коротенькая статья о том, для чего и как применяется функция preg_filter(). <br>\r\n<img          src=\"https://a.radikal.ru/a12/2110/fe/0592a16bb7c5.jpg\" alt=\"сыщик\"><br>\r\nФункция применяется для поиска и замены части текста на другую часть текста. Для поиска используются регулярные выражения. Найденное совпадение функция вырезает и на место старого текста вставляет заготовленную строку.<br>\r\n<br>\r\n<i>Синтаксис:</i>   <a href=\"regular_expressions.php\" target=\"_blank\">…поупражняться с рабочей функцией можно тут: </a><br>\r\n<code>                  <br>\r\npreg_filter(<br>\r\n    string|array $pattern,<br>\r\n    string|array $replacement,<br>\r\n    string|array $subject,<br>\r\n    int $limit = -1,<br>\r\n    int &$count = null<br>\r\n): string|array|null<br>\r\n</code><br>\r\n<br>\r\nКак видно функция работает как со строками, так и с массивами.<br>\r\n<b> Первый параметр ($pattern)</b> в функции задает то самое регулярное выражение. Заключено оно должно быть в разделители, к примеру //, позже покажу в примере.<br>\r\n <br>\r\n<b> Второй параметр функции ($replacement)</b>– это строка, которая будет вставлена в то место, которое будет совпадать с регулярным выражением, само же совпадение будет удалено из строки.<br>\r\n<br>\r\n<b> Третий параметр ($subject)</b> – это входящая строка или массив, с которым будут проводиться манипуляции, но сама строка останется нетронутой, если не будет присвоена сама себе конечно.<br>\r\n<br>\r\nДалее в функции два необязательных параметра.<br>\r\n<b> Первый параметр ($limit)</b> задает максимальное количество замен. То есть, если необходимо провести замену в двух местах, то параметр должен быть равен 2. Если необходимо произвести все возможные замены, то значение должно быть (-1) или параметр должен отсутствовать.<br>\r\n<br>\r\n<b> Ну и последний параметр</b>, если будет указан в параметрах функции, является носителем того, сколько замен удалось совершить. Задается как переменная и читается так-же, как переменная, после, разумеется, отработки функции.<br>\r\nНу и наконец возвращаемое значение – это новая, переработанная строка.<br>\r\n<br>\r\n<i>Пример:</i> <a href=\"regular_expressions.php\" target=\"_blank\">…поупражняться с рабочей функцией можно тут: </a><br>\r\n<code>                  <br>\r\n$pattern =’/[0-9]/’;<br>\r\n$replacement=’*’;<br>\r\n$subject=’EF43QREWFKHJ349088ASDEF’;<br>\r\n$result=preg_filter($pattern, $replacement, $subject);<br>\r\n</code><br>\r\nПосле отработки в переменной $result будет строка, в которой все цифры от 0 до 9 будут изменены на символы ‘*’.<br>\r\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/sfrJjRB9RIs\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe><br>\r\n#phpregular#', 'alfa54', 'phpregular'),
(5, 'Функция preg_quote()', 'Функция предназначена для экранирования служебных символов в тексте.<br>\r\nСлужебные символы – это символы, которые что-либо делают. К примеру, символ точка «.» в регулярном выражении означает любой символ, кроме переноса строки. Теперь представим, что Вы ищите в тексте словосочетание: «Пункт 1.2». <br>\r\n<img    src=\"https://a.radikal.ru/a22/2110/42/4ba69651b88d.jpg\" alt=\"экранирование\"><br>\r\n<br>\r\nТогда поисковая функция вместо точки будет подставлять любой символ кроме переноса строки, а это «Пункт 102», «Пункт 112» и так далее. Для того, чтобы этого избежать и необходимо экранировать служебные символы. Экранирование производится установкой обратного слеша перед каждым служебным символом. Если текст статический и небольшой, то можно — это сделать вручную один раз и не использовать функцию. В случае большого или динамического текста, который, к примеру, скачивается из интернета или вводится пользователем, пригодится функция накшталт preg_quote(). <br>\r\n<br>\r\nФункция preg_quote() считает служебными символами: . \\ + * ? [ ^ ] $ ( ) { } = ! &lt &gt | : - #. Перед каждым из этих символов будет поставлен обратный слеш и символ перестанет быть служебным. Если по какой-то причине необходимо расширить список служебных знаков, то в функции есть второй, не обязательный параметр.<br>\r\n<br>\r\nПосмотреть, как – это работает можно на странице <a href=\"regular_expressions.php\" target=\"_blank\"><b>              тут</b></a> выбрав данную функцию из всего списка функций и задав необходимые параметры. <br>\r\nСинтаксис:<br>\r\n<code>                 <br>\r\npreg_quote(string $str, ?string $delimiter = null): string<br>\r\n</code><br>\r\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/axH3EbjcD5E\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe><br>\r\n#phpregular#<br>\r\n', 'alfa54', 'phpregular'),
(6, 'Функция preg_grep().', 'Данная функция проверяет соответствие членов массива регулярному выражению и выводит в новый массив найденные члены. В качестве входящего параметра есть строка регулярного выражения и массив, в котором ищем совпадения. Есть у функции и третий, не обязательный параметр, который определяет, что именно выводить в выходной массив. <br>\r\nФункция может выводить как те члены, в которых нашли совпадение, так и те члены массива, в котором не нашли совпадение. Собственно, для этих целей и используется третий параметр. По умолчанию в выходной массив попадут те члены массива, в которых нашли совпадения по шаблону.<br>\r\nСинтаксис.<br>\r\n<code>             <br>\r\n<br>\r\npreg_grep(string $pattern, array $array, int $flags = 0): array|false<br>\r\n</code><br>\r\nКак видно из синтаксиса, функция вернет массив с результатом или False (array|false), если что-то пошло не так.<br>\r\nПервым параметром идёт строка шаблона, регулярного выражения. Второй параметр – это и есть входящий массив, в котором будем что-то искать. Ну и собственно флаг, его можно не задавать, тогда в выходном массиве будут те члены массива, которые соответствуют шаблону, если значение флага будет PREG_GREP_INVERT, то в выходном массиве будут члены, которые не соответствуют шаблону.<br>\r\n<br>\r\n<a href=\"regular_expressions.php\" target=\"_blank\">Как функция работает на практике можно посмотреть тут:</a><br>\r\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/YmSNmw9pyKc\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe><br>\r\n#phpregular#<br>\r\n<br>\r\n', 'alfa54', 'phpregular'),
(7, 'Функция preg_match().', 'Всем доброго времени суток. Небольшая статья о том, как работает данная функция. Поэкспериментировать можно на сайте в соответствующем разделе. В конце статьи есть видео инструкция по работе с функцией и где с ней можно поработать онлайн.<br>\r\n<br>\r\nФункция находит вхождения регулярного выражения в строку и записывает результаты в массив, если такой массив задан, в противном случае функция просто возвращает факт наличия или отсутствия такого вхождения.<br>\r\n<br>\r\nСинтаксис:<br>\r\n<code>   <br>\r\npreg_match($pattern, $subject, &$matches, $flags, $offset);<br>\r\n</code><br>\r\nКак видно функция возвращает целое число или логическое Ложь. Здесь следует обратить внимание на то, что проверять возврат нуля или false следует при помощи тройного знака «=», то есть «===» вместо обычного «==». Причина в том, что число 0 и значение false равны, если можно так сказать, по модулю. Тройное равно проверяет на соответствие не только значению, но и типу переменных. Целое число 0 !== false.<br>\r\n<br>\r\nПервый параметр $pattern определяет регулярное выражение. Второй параметр $subject задает входную строку, в которой ищем соответствия для нашего регулярного выражения. Обязательными параметрами в функции preg_match являются только эти два параметра, остальные можно пропустить. В этом случае можно лишь проверять сам факт вхождения или соответствия регулярного выражения части строки. Если соответствие нашли, то функция вернет цифру 1, если не нашли, то 0, если же произошла ошибка, то функция вернет false. Повторюсь, отличить 0 от false можно тройным знаком равно, вместо двойного.<br>\r\n<br>\r\nЕсли Вам необходимо работать с найденными вхождениями, то необходимо задать третий параметр – это массив. В зависимости от режима работы массив может быть двумерным или одномерным, функция сама его создает. На специальной странице нашего сайта можно посмотреть, как – это работает онлайн. В каких случаях массив будет каким зависит от флагов.<br>\r\n<br>\r\nТеперь рассмотрим немного флаги. У preg_match() флагов два: PREG_OFFSET_CAPTURE и PREG_UNMATCHED_AS_NULL. Можно, разумеется, использовать оба флага через вертикальную полосу «PREG_OFFSET_CAPTURE | PREG_UNMATCHED_AS_NULL». <br>\r\nКак было описано выше, если Вам необходимо работать с вхождениями, которые были найдены, Вам нужно задать массив третьим параметром. Если Вы это сделали, то можете расширить функционал работы с массивом используя данные флаги. <br>\r\nЕсли флаги не задавать, то на выходе получите одномерный массив с найденными вхождениями. Флаг PREG_OFFSET_CAPTURE используется для того, чтобы создать двумерный массив, в котором все нулевые члены будут содержать значения, а все первые члены будут показывать смещение найденного значения, ВНИМАНИЕ в байтах. В зависимости от кодировки одно и то же значение может иметь разное смещение. К примеру, латиница занимает 1 байт, а значит третий символ в строке находится на втором байте, отчет начинается с нуля. Если речь о кириллице, то размер символа равен 2 байтам и тогда третий символ в строке будет иметь смещение 4.<br>\r\nВсё это можно увидеть на тестовой странице сайта.<br>\r\n<br>\r\nНу и последний параметр  $offset задает то самое смещение, с которого следует начинать поиск соответствий. По умолчанию значение равно нулю, исчисление производится так-же в байтах, не в символах.<br>\r\n<br>\r\nОстается добавить то, что несмотря на то, что 3,4,5 параметры не обязательны, но для того, чтобы задать параметр 5 – смещение, следует задать флаг, иначе функция воспримет Ваше смещение за флаг и выдаст ошибку.<br>\r\n<br>\r\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/LsP_sDXyLHU\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe><br>\r\n#phpregular#', 'alfa54', 'phpregular'),
(8, 'Функция preg_match_all().', 'Всем доброго времени суток. Небольшая статья о том, как работает данная функция. Поэкспериментировать можно на сайте в соответствующем разделе. В конце статьи есть видео инструкция по работе с функцией и где с ней можно поработать онлайн.<br>\r\n<br>\r\nФункция находит вхождения регулярного выражения в строку и записывает результаты в массив, если такой массив задан, в противном случае функция просто возвращает число найденных вхождений.<br>\r\n<br>\r\nСинтаксис:<br>\r\n<code>           <br>\r\npreg_match_all($pattern, $subject, &$matches, $flags, $offset);<br>\r\n</code><br>\r\nФункция возвращает число найденных вхождений, либо false в случае ошибки. Если вхождений не найдено, то функция возвращает цифру 0. Написано в документации и то, что функция умеет возвращать значение NULL, однако, не указано в каких случаях.<br>\r\n<br>\r\nВходные параметры функции такие-же, как и у preg_match(), но другие флаги.<br>\r\nПервый параметр задает регулярное выражение, второй параметр – это строка, в которой ищем совпадения по регулярному выражению. Этих двух параметров достаточно, для запуска функции, остальные же параметры добавляются по необходимости.<br>\r\nТретий параметр – это массив, в котором будут помещены результаты работы функции, напоминаю, функция возвращает лишь число вхождений.<br>\r\nЧетвертый параметр – это флаг, у функции preg_match_all() из 4. Рассмотрим ниже.<br>\r\nПоследний параметр – это смещение от начала строки в байтах, на случай если поиск необходимо начинать не с начала строки. Если используете не однобайтовую котировку, то – это следует учитывать. Так-же следует помнить, что хоть задание флагов не обязательно, но при задании смещения необходимо задавать и флаг, иначе функция посчитает смещение флагом и выдаст ошибку, либо отработает не так, как ожидалось, если смещение совпадет со значением флага.<br>\r\n<br>\r\nЧто касается флагов.<br>\r\nПервый флаг и флаг по умолчанию – это PREG_PATTERN_ORDER. Если указан данный флаг, то в массиве найденные совпадения будут выстроены таким образом, что в нулевом элементе будут находиться полные совпадения шаблона, а в следующих элементах массива будут расположены найденные подмаски шаблона. <br>\r\nВторой флаг – это PREG_SET_ORDER. Если он задан, то в нулевом элементе массива будет содержаться первый набор вхождений, в первом элементе массива второй набор вхождений и так далее.<br>\r\nЕсли задать третий флаг: PREG_OFFSET_CAPTURE, то для всех вхождений будет указано их смещение, то есть массив будет содержать не данные о вхождениях, а массив с данными о вхождениях и смещениях. По-простому массив станет двумерным и каждое вхождение будет указано в нулевой ячейке($matches[x][0]), а смещение в первой ячейке($matches[x][1]). <br>\r\nПоследний флаг PREG_UNMATCHED_AS_NULL делает так, что не совпадающие маски будут обозначены не пустыми строками, а значениями NULL.<br>\r\nРазумеется, все флаги можно комбинировать акромя первого и второго. В функции из двух первых флагов может быть задан только один. В программе тестирования на этом сайте первый параметр в приоритете и, если он задан, второй будет проигнорирован. В реальности будет выдана ошибка.<br>\r\n<br>\r\nНиже можно посмотреть видео с тестированием функции, либо самому её протестировать на соответствующей <a href=\"http://dfdx.uxp.ru/regular_expressions.php\">странице нашего сайта.</a><br>\r\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/WvL9-Pj2JdA\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe><br>\r\n#phpregular#', 'alfa54', 'phpregular'),
(9, 'Функция preg_split().', 'Всем доброго времени суток. Небольшая статья о том, как работает функция preg_split(). Поэкспериментировать можно на сайте в соответствующем разделе. В конце статьи есть видео инструкция по работе с функцией и где с ней можно поработать онлайн.<br>\r\n<br>\r\nФункция разбивает строку на подстроки, используя в качестве разделителя регулярное выражение.<br>\r\n<br>\r\nСинтаксис:<br>\r\n<code>    <br>\r\npreg_split ($pattern,$subject,$limit,$flags): array|false<br>\r\n</code><br>\r\nФункция возвращает массив с подстроками.<br>\r\n<br>\r\n$pattern – данный параметр задает регулярное выражение, которое и будет тем признаком, по которому входная строка будет разбита на подстроки. <br>\r\n<br>\r\n$subject – строка, которую следует разбить на подстроки и результат поместить в выходной массив.<br>\r\n<br>\r\n$limit – данный параметр задает максимальное число подстрок в результирующем массиве. Если значение равно -1, то строка будет разбита по всем найденным вхождениям регулярного выражения. Если значение будет больше, чем -1, то в результирующем массиве будет только $limit подстрок, при этом в последнюю подстроку войдёт оставшаяся часть строки вне зависимости от того есть ли там ещё вхождения регулярного выражения или нет.<br>\r\n<br>\r\nЧто касается флагов.<br>\r\nУ функции preg_split() есть три флага. Комбинировать флаги можно используя вертикальный слеш |.<br>\r\n<br>\r\nPREG_SPLIT_NO_EMPTY – если задан этот флаг, то в выходном массиве будут только не пустые строки. В видео ролике показан вариант появления в массиве пустой строки.<br>\r\n<br>\r\nPREG_SPLIT_DELIM_CAPTURE – данный флаг используется тогда, когда в регулярном выражении применяются круглые скобки. Благодаря этому флагу в массив выведется так-же найденное регулярное выражение, по которому произошло деление строки. Данный момент тоже хорошо показан в видеоролике.<br>\r\n<br>\r\nPREG_SPLIT_OFFSET_CAPTURE – флаг используется тогда, когда необходимо знать положение или смещение каждой найденной подстроки. Смещение указывается в дополнительной ячейке массива в байтах. Первый символ строки находимся на нулевом байте. Если шрифт строки занимает не один байт, к примеру кириллица, то этот момент так-же следует учитывать. <br>\r\n<br>\r\nНиже можно посмотреть видео с тестированием функции, либо самому её протестировать на <a href=\"http://dfdx.uxp.ru/regular_expressions.php\">соответствующей странице нашего сайта.</a><br>\r\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/qHAWhKzt2JU\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe><br>\r\n#phpregular#', 'alfa54', 'phpregular'),
(10, 'Функция preg_replace().', 'Всем доброго времени суток. Небольшая статья о том, как работает функция <b>          preg_replace()</b>. Поэкспериментировать можно на сайте в соответствующем разделе. В конце статьи есть видео инструкция по работе с функцией и где с ней можно поработать онлайн.<br>\r\n[IMG]ensxtgkivn.jpg[IMG]<br>\r\nФункция осуществляет замену в строке используя регулярные выражения. Функция работает как со строковыми переменными, так и с массивами. Возможны и смешанные варианты. <br>\r\n<br>\r\nСинтаксис:<br>\r\n<code>          <br>\r\npreg_replace($pattern,$replacement,$subject,$limit,$count): string|array|null<br>\r\n</code><br>\r\nФункция возвращает массив с результатом.<br>\r\n<br>\r\n<b>          $pattern</b> – данный параметр задает регулярное выражение, которое может выражаться строкой или массивом. В случае массива правила оформления шаблона такое-же самое, как и при строковой константе.<br>\r\n<br>\r\n<b>          $replacement</b> – это строка, которая будет подставлена вместо найденного участка в строке согласно регулярному выражению. Может быть задано как одной строкой, так и массивом строк.<br>\r\n<br>\r\n<b>          $subject</b> – строка или массив, в котором будут происходить замены. <br>\r\n<br>\r\n<b>          $limit</b> – данный параметр задает максимальное число подстрок в результирующем массиве. Если значение равно -1, то строка будет изменена по всем найденным вхождениям регулярного выражения. Если значение будет больше, чем -1, то в результирующем массиве будет только $limit изменений.<br>\r\n<br>\r\nВ первых трех параметрах функции <b>          preg_replace()</b> можно задавать как строки, так и массивы строк. Если, скажем, первый и второй параметр будут заданы массивами, то замена будет производиться согласно номерам членов массива. То есть если нашли вхождение из 5-го элемента массива, то он будет заменен именно на подстроку из 5-го элемента массива  $replacement.<br>\r\n<br>\r\n<br>\r\nНиже можно посмотреть видео с тестированием функции, либо самому её протестировать на <a href=\"http://dfdx.uxp.ru/regular_expressions.php\">соответствующей странице нашего сайта.</a><br>\r\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/2K6PebSOSRM\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe><br>\r\n#phpregular#', 'alfa54', 'phpregular'),
(11, 'Функция preg_replace_callback().', 'Всем доброго времени суток. Небольшая статья о том, как работает функция <b>     preg_replace_callback (). </b>Поэкспериментировать можно на сайте в соответствующем разделе. В конце статьи есть видео инструкция по работе с функцией и где с ней можно поработать онлайн.<br>\r\n<br>\r\nФункция осуществляет замену в строке используя регулярные выражения. Функция работает как со строковыми переменными, так и с массивами. Возможны и смешанные варианты. Работа функции напоминает preg_replace с тем отличием, что строка для замены не строка а функция.<br>\r\n<br>\r\nСинтаксис:<br>\r\n<code>              <br>\r\npreg_replace_callback (array|string $pattern, //искомый шаблон<br>\r\n            callable $callback, // callback-функция<br>\r\n            array|string $subject, //входящая строка<br>\r\n            int $limit = -1 //лимит подстрок<br>\r\n            int $count = null //содержит число произведенных замен<br>\r\n             int $flags = 0    // флаги<br>\r\n            ): array|string |null<br>\r\n</code><br>\r\nФункция возвращает массив с результатом или строку.<br>\r\n<br>\r\n<b>     $pattern</b> – данный параметр задает регулярное выражение, которое может выражаться строкой или массивом. В случае массива правила оформления шаблона такое-же самое, как и при строковой константе.<br>\r\n<br>\r\n<b>     $subject</b> – строка или массив, в котором будут происходить замены. <br>\r\n<br>\r\n<b>     $limit </b>– данный параметр задает максимальное число подстрок в результирующем массиве. Если значение равно -1, то строка будет изменена по всем найденным вхождениям регулярного выражения. Если значение будет больше, чем -1, то в результирующем массиве будет только $limit изменений.<br>\r\n<br>\r\n<b>     $count</b> – Если данная переменная указана, то она будет содержать количество получившихся замен.<br>\r\n<br>\r\n<b>     $flags</b> – содержит список флагов, разделенных вертикальным слешем или чертой. Тип переменных int, а у флагов есть свои значения. Так у данной функции есть два флага: <b>     PREG_OFFSET_CAPTURE</b> и <b>     PREG_UNMATCHED_AS_NULL.</b> Значение первой константы 256, второй 512, можно работать с таким видом.<br>\r\nФлаг <b>     PREG_OFFSET_CAPTURE</b> задает режим, при котором вместе с найденным совпадением будет указано смещение оного от начала строки в байтах.  <br>\r\nФлаг <b>     PREG_UNMATCHED_AS_NULL </b>задает возврат вместо пустого совпадения значения <b>     NULL</b>.<br>\r\n<br>\r\nТеперь, собственно, подошло время разобраться с callback-функцией. <br>\r\n<b>     Callback-функция</b> – это обычная функция, которая выдает результат для замены, так-же в ней можно использовать всё то, что можно в обычных функциях.<br>\r\n<b>     Callback-функция</b> может быть описана отдельно от функции <b>     preg_replace_callback()</b> или внутри скобок функции <b>     preg_replace_callback()</b> как её параметр.<br>\r\n<br>\r\nЕсли функция описывается внутри параметров функции preg_replace_callback(), то она объявляется и описывается как анонимная функция, то есть функция без имени.<br>\r\n<br>\r\nПример:<br>\r\n<code>              <br>\r\n   preg_replace_callback(/’a’/u, function ($match) {<br>\r\n              //тело функции<br>\r\n               return strtoupper($match[1]);<br>\r\n              },// конец описания функции и <br>\r\n              // дальше следующие параметры<br>\r\n              «объект, с которым проводятся манипуляции»<br>\r\n);<br>\r\n</code><br>\r\nВ функции <b>     preg_replace_callback()</b> указаны только первые три обязательных параметра. Как видно, второй параметр – функция является обычной функцией, только без имени. <br>\r\nВходной параметр ($match) – это массив найденных вхождений. Внутри функции с этим массивом можно провести нужные манипуляции и результат вернуть конструкцией return.  Далее функция preg_replace_callback() заменит все найденные вхождения в строке или массиве на результат полученный от анонимной  callback функции.  Как – это работает можно посмотреть на соответствующей <a href=\"http://dfdx.uxp.ru/regular_expressions.php\"> странице нашего сайта.</a><br>\r\nВторой вариант описания  callback функции – это её отдельное описание. По сути, в параметр функции preg_replace_callback() можно передать любую имеющуюся в наличии функцию указав её название в строковой переменной.<br>\r\n<br>\r\nПример:<br>\r\n<code>              <br>\r\nfunction dog($match)<br>\r\n {<br>\r\n              //тело функции<br>\r\n             return strtoupper($match[1]);<br>\r\n }<br>\r\n<br>\r\npreg_replace_callback(/’a’/u, ‘dog’,«объект, с которым проводятся манипуляции»);<br>\r\n</code><br>\r\nЭффект тот же самый.<br>\r\n<br>\r\nНиже можно посмотреть видео с тестированием функции, либо самому её протестировать на <a href=\"http://dfdx.uxp.ru/regular_expressions.php\">соответствующей странице нашего сайта.</a><br>\r\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/_F71h5eYhcY\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe><br>\r\n#phpregular#', 'alfa54', 'phpregular'),
(12, 'preg_replace_callback_array() (PHP8)', 'Функция<b>          preg_replace_callback_array()</b>  — поиск и замена по регулярному выражению с использованием функций обратного вызова.<br>\r\n<br>\r\nСинтаксис:<br>\r\n<code>           preg_replace_callback_array($pattern,$subject,$limit,&$count,$flags);</code> <br>\r\n<br>\r\nВозвращает: массив, строку или NULL.<br>\r\n<br>\r\n<b>          Описание параметров.</b> <br>\r\n<br>\r\n <b>          $pattern</b>  – этот параметр является парой: регулярное выражение + функция обратного вызова. Функция работает таким образом, что для каждого заданного регулярного выражения можно описать свою функцию обратного вызова. <br>\r\nК примеру, если нашли слово «красное», то к нему нужно дописать слово «яблоко», если нашли слово «скользкий», то к нему дописать слово «лёд». То есть каждая функция обратного вызова работает над своим регулярным выражением.<br>\r\nОформляется данный параметр в квадратных скобках через запятую:<br>\r\n<code>        <br>\r\n[<br>\r\n  ‘/красное/’ =&gt function ($match) {return ‘красное яблоко’;},<br>\r\n  ‘/скользкий/’ =&gt function ($match) {return ‘скользкий лёд’;}<br>\r\n]<br>\r\n</code><br>\r\nЭто всё один первый параметр, после закрытой квадратной скобки будет располагаться запятая и следующие параметры функции <b>          preg_replace_callback_array().</b> <br>\r\nВ данном примере есть два регулярных выражения и после знака =&gt указана функция обратного вызова, которая работает с найденным регулярным выражением.<br>\r\nВ параметр ($match) функции обратного вызова будет передан массив с найденным вхождением регулярного выражения. Массив может быть одномерным, тогда в функции используется $match[0] или двумерный. В случае с двумерным массивом во втором измерении будет указано смещение в байтах найденного вхождения. Будет это двумерный или одномерный массив задается флагом.<br>\r\nТаким образом ту же самую функцию можно реализовать следующим образом:<br>\r\n<code>        <br>\r\n[<br>\r\n ‘/красное/’ =&gt function ($match) {return $match[0].‘ яблоко’;},<br>\r\n ‘/скользкий/’ =&gt function ($match) {return $match[0].‘ лёд’;}<br>\r\n]<br>\r\n</code><br>\r\nЗамена происходит сразу же, как только находится регулярное выражение, поэтому параметр $match[0] всегда будет с нулевым индексом, если массив двумерный, то $match[0][0].<br>\r\nНапоследок следует отметить, что функция обратного вызова – это обычная функция, в которую можно подключать библиотеки и писать любой код. Важно лишь помнить, что для замены, функция должна вернуть что-то с помощью return – это если необходимо что-то заменить.<br>\r\n<br>\r\n<b>          $subject </b> – это массив или строка, над которой проводятся манипуляции. Если данный параметр является строкой, то функция вернет строку, если данный параметр будет массивом, то функция вернет массив. <br>\r\n<br>\r\n<b>          $limit</b>  – этот параметр задает максимальное число замен, если его значение равно «-1», то заменены будут все вхождения. Параметр, разумеется, должен быть числом.<br>\r\n<br>\r\n<b>          &$count</b>  – этот параметр является переменной целого типа, которую инициализирует функция и в неё будет помещено число замен, которые произвела функция после своей отработки.<br>\r\n<br>\r\n<b>          $flags</b>  – данная переменная с помощью флагов управляет функцией <b>          preg_replace_callback_array().</b>  Есть у данной функции два флага их можно задавать как отдельно, так и комбинировать с помощью вертикального слеша «|». Ещё один вариант – это использовать значения флагов и просто их сложить. <br>\r\nЕсли задать флаг <b>          PREG_OFFSET_CAPTURE</b> , то при нахождении вхождения в массив функции обратного вызова будет передан параметр смещения в байтах вхождения от начата строки. В этом случае будет передан двумерный массив $match[0][0].<br>\r\nЕсли задан флаг <b>          PREG_UNMATCHED_AS_NULL</b> , то в случае нахождения пустых вхождений, будет передаваться значение NULL. <br>\r\nЕсли необходимо задать оба флага, то есть два способа. Первый способ – это записать их через вертикальный слеш: <b>          PREG_OFFSET_CAPTURE| PREG_UNMATCHED_AS_NULL</b> , второй способ связан со значением данных констант. Константа <b>          PREG_OFFSET_CAPTURE</b>  имеет значение 256, а константа <b>          PREG_UNMATCHED_AS_NULL</b>  равна 512. Таким образом можно сложить 512 и 256 и получить комбинацию данных флагов, в некоторых случаях цифрами работать удобнее, чем их текстовыми именами. К примеру, если необходимо узнать какой из флагов был задан.<br>\r\n<code>        <br>\r\n $flagTest=$flag;<br>\r\n if ($flagTest&gt=512) <br>\r\n    {<br>\r\n       echo ‘Задан флаг PREG_UNMATCHED_AS_NULL’;<br>\r\n       $flagTest=$flagTest-512;<br>\r\n   }<br>\r\n if ($flagTest&gt=256) echo ‘Задан флаг PREG_OFFSET_CAPTURE’;<br>\r\n</code><br>\r\nС данной функцией все, внизу есть видео, а в соответствующем разделе сайта можно протестировать данную функцию онлайн.<br>\r\n<br>\r\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/tSI2whSz3_I\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe><br>\r\n#phpregular#<br>\r\n<br>\r\n', 'alfa54', 'phpregular'),
(13, 'Регистрация пользователя на сайте с CMS-DFDX', 'Внизу есть видео, но можно описать регистрацию несколькими простыми предложениями.<br>\r\n<br>\r\nС сайта нажимаем кнопку регистрации, если есть сайт, если сайта нет, то запускаем страничку redactor.php с корневого каталога CMS-DFDX.<br>\r\nВ обоих случаях переходим на данную страницу и повторно жмём на кнопку регистрации.<br>\r\n<br>\r\nВнизу страницы будут поля для ввода данных, логина, пароля, пароля, почты.<br>\r\nНиже есть 5 полей с капчей, в первом поле написан вопрос либо предложение, в остальных четырех полях есть варианты ответа. Если в первом поле был вопрос, то выбираем вариант – это очевидно. Если в первом поле есть некое предложение, то нужно нажать на кнопку возможного ответа на данное предложение. Это может быть синоним или антоним не важно. <br>\r\n<br>\r\nПод полями с капчей ест три кнопки, с помощью которых можно сменить вопрос капчи, очистить поля или проверить логин с почтой. При смене капчи и проверке логина с паролем данные в полях сохраняются.<br>\r\n<br>\r\nПосле того, как Вы ответите на капчу нажав на одну из кнопок, если капча не верна, то можно будет ответить ещё раз, а если капча верна, то появится сообщение о том, что пользователь зарегистрирован и можно переходить к процессу подтверждения почты.<br>\r\n<br>\r\nДля подтверждения почты необходимо дождаться письма с кодом, оно может прийти в папку спам, войти на сайт используя данные и в предложенном поле ввести код из письма. Если письмо, по-Вашему, долго не приходит, то можно его отправить, повторно нажав на кнопку поиска письма. Данная кнопка есть рядом с полем ввода кода, то есть нужно так-же войти, используя логин и пароль, кнопка расположена рядом, с полем для проверки почты.<br>\r\n<br>\r\nПосле того, как состоится подтверждение регистрации, Вы будете отправлены на главную страницу сайта и сможете пользоваться теми правами, которые разрешены для Вашего статуса зарегистрированного пользователя. На этом сайте Вы сможете написать статью и опубликовать её, получив монеты, которые позже можно будет потратить на открытие закрытых частей текста.<br>\r\n<br>\r\nВидео по данной теме внизу. Удачного серфинга.<br>\r\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/lWx9RtWX4sk\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe><br>\r\n<br>\r\n#cmsdfdx#', 'alfa54', 'cmsdfdx'),
(14, 'Регистрация администратора на сайте с CMS-DFDX', 'Внизу есть видео, но можно описать регистрацию несколькими простыми предложениями.<br>\r\n<br>\r\nС сайта нажимаем кнопку регистрации, если есть сайт, если сайта нет, то запускаем страничку redactor.php с корневого каталога CMS-DFDX.<br>\r\n<br>\r\nВ обоих случаях переходим на данную страницу и повторно жмём на кнопку регистрации.<br>\r\n<br>\r\nВнизу страницы будут поля для ввода данных, логина, пароля, пароля, почты. Для первой регистрации администратора есть четыре ключевых логина: Admin, admin, Administrator, administrator. Четыре сделал для того, чтобы не запоминать точно какое слово и с какой буквы писать. Можно дать права администратора любой учётной записи подправив соответствующую таблицу в базе данных, но так, как – это всё-таки CMS, есть возможность зарегистрировать первого администратора с помощью специального логина, а остальных администраторов можно будет после назначить с помощью админ-панели, используя учётную запись первого администратора.<br>\r\n<br>\r\nНиже есть 5 полей с капчей, в первом поле написан вопрос либо предложение, в остальных четырех полях есть варианты ответа. Если в первом поле был вопрос, то выбираем вариант – это очевидно. Если в первом поле есть некое предложение, то нужно нажать на кнопку возможного ответа на данное предложение. Это может быть синоним или антоним не важно. <br>\r\n<br>\r\nПод полями с капчей ест три кнопки, с помощью которых можно сменить вопрос капчи, очистить поля или проверить логин с почтой. При смене капчи и проверке логина с паролем данные в полях сохраняются.<br>\r\n<br>\r\nПосле того, как Вы ответите на капчу нажав на одну из кнопок, если капча не верна, то можно будет ответить ещё раз, а если капча верна, то появится сообщение о том, что пользователь зарегистрирован и можно переходить к процессу подтверждения почты.<br>\r\n<br>\r\nСкорее всего письмо с кодом будет отправлено на указанную почту, но в случае регистрации администратора, данное письмо не имеет значение. Код для подтверждения регистрации будет находиться в корневой папке сайта, то есть в той папке, в которой лежит файл redactor.php, называется файл с кодом kod.txt.<br>\r\nФайл открывается любым текстовым редактором, в нем находится один код, который нужно скопировать и вставить в форму подтверждения регистрации. Форма появится после того, как Вы войдёте на страницу с данными, указанными при регистрации.<br>\r\n<br>\r\nПосле того, как состоится подтверждение регистрации, Вы будете отправлены на главную страницу сайта и сможете пользоваться правами администратора. Для того, чтобы войти в административную панель необходимо нажать на кнопку настроек, она появится, как только Вы войдёте на сайт с подтвержденными данными.<br>\r\n<br>\r\nВидео по данной теме внизу. Удачного серфинга.<br>\r\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/lWx9RtWX4sk\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe><br>\r\n#cmsdfdx#', 'alfa54', 'cmsdfdx'),
(15, 'Как опубликовать статью на сайте с CMS-DFDX.', 'Статья о том, как на данный момент опубликовать статью на сайте, созданном на основе CMS-DFDX. Модуль редактора и вывода статей будет меняться со временем, данная статья актуальна на 25.12.2021.<br>\r\n<br>\r\nДля публикации статьи у Вас должны быть соответствующие права. Модуль редактора статей позволяет раздавать права как группам, так и отдельным пользователям. У нас на сайте добавлять и редактировать статьи могут все пользователи, подтвердившие свои учётные записи. Отличия лишь в том, что для статусов зарегистрированного пользователя и подписчика существует предмодерация. Это означает, что, если Вы не являетесь редактором, модератором или администратором, Ваша статья будет опубликована после проверки модератором или администратором. Кроме этого, модератор или администратор могут вернуть вашу статью на доработку с пояснением причины возврата, Вы доработаете и снова отправляете на модерацию. Ну и собственно число таких циклов не ограничено.<br>\r\n<br>\r\nС правами разобрались, дальше техническая часть. Если у Вас есть права публиковать статьи, то у Вас будут видны под каждой существующей статьёй соответствующие кнопки. Там, где Вы не можете редактировать, будет только кнопка Добавить. Ну и так далее. Под Вашими статьями могут быть кнопки добавления и редактирования, под чужими только добавления. На какую именно кнопку добавления статьи Вы нажмёте не важно.<br>\r\n<br>\r\nИтак, Вы нашли кнопку добавления статьи, нажали её и перед вами открывается окно редактора статей, прямо на сайте.<br>\r\n<br>\r\nВверху, разумеется, Вы вводите заголовок статьи, в большом окне текст статьи. На тексте статьи остановимся немного подробнее.<br>\r\n<br>\r\nМомент первый – это в тексте вам доступны теги, указанные в самом низу редактора. Если прокрутите страницу вниз, то увидите «Допустимые теги:» и дальше список тегов, которые можно использовать в тексте. Все остальные теги будут частично удалены и в итоге получите сломанную картинку на выходе.<br>\r\n<br>\r\nМомент второй – немного выше отдельно указан тег BR на случай, если Вам в тексте понадобится дополнительная пустая строка. Там, где нужен просто переход на новую строку, то дополнительного тега ставить не нужно, редактор сам добавляет теги вместо конца строки в окне редактора.<br>\r\n<br>\r\nМомент третий: для того, чтобы вставить картинку, нужно использовать тег img, по этому поводу есть соответствующая подсказка. Там-же, под редактором есть шаблон, который можно скопировать и вставить в статью в том месте, где нужна картинка, ну и дальше заменить текст «ссылка на картинку» на соответствующую ссылку на картинку. Если Вам необходимо добавить атрибут alt, то его текстовая часть НЕ должна содержать пробелов. Если Вам нужно вставить несколько слов, то используйте нижнее подчёркивание или тире. Так-же можно задать другие атрибуты для картинки, размер, обтекание …<br>\r\n<br>\r\nМомент четвертый, чтобы встроить видео из Ютуба, необходимо под роликом на Ютубе выбрать «поделиться», и найти там огромную ссылку для встраивания видео в сайт. <br>\r\n<br>\r\nМомент пятый – категории. Внизу, под полем редактирования статьи, там, где все подсказки, есть подсказка существующих категорий. Категории обозначены с двух сторон решетками (решетка)категория(решетка). В любое место статьи, лучше в конец, Вы должны вставить категорию, которой принадлежит Ваша статьи. К примеру, на данный момент существует три категории:  html3html5xhtml, phpregular, cmsdfdx . Символы решетки я не ставлю, потому что в этом случае программа выберет первую категорию и присвоит статью к этой категории. Категории могут быть составными. К примеру, категория html3html5xhtml означает, что статья принадлежит к трем категориям, а именно html3, html5 и xhtml. То есть у каждой кнопки на сайте, выводящей список своих статей есть, категория, к примеру у кнопки HTML категория html3 и все статьи, у которых категория содержит подстроку html3 будут показаны при нажатии на эту кнопку.<br>\r\n<br>\r\nНу и последний момент – это выбор стиля оформления статьи. Если нажать на ссылку «Посмотреть образцы оформлений», то можно посмотреть варианты оформления, которые есть в данный момент времени. Чтобы выбрать вариант оформления статьи необходимо переключить Радиокнопку в нужное место и нажать на кнопку Выбрать. При этом страница обновится и данные полей подтянутся из базы данных, поэтому выбирать тип оформления необходимо в начале или в конце редактирования статьи, после того как была нажата кнопка Сохранить статью, или до начала редактирования статьи.<br>\r\n<br>\r\nДа, напоследок, если у Вас в статье будут использованы коды каких-либо языков программирования, то их следует заключить в теги CODE открытый и закрытый, как обычно. Стили будут оформлены согласно соответствующей схеме оформления. Никаких дополнительных классов не стоит добавлять. Просто тег открывающий и тег закрывающий, между ними код.<br>\r\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/Wz093iwvOdA\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe><br>\r\n#cmsdfdx#', 'alfa54', 'cmsdfdx'),
(16, 'Настраиваем меню используя админ-панель.', 'Текстовая версия для тех, кто не любит смотреть видео. Кто предпочитает видео, то ролик находится внизу статьи. <br>\r\n<br>\r\nМомент первый. Данная функция пригодится тем, кто не владеет навыками работы с базами данных или программирования. Впрочем, как и любая административная панель любого CMS.<br>\r\n<br>\r\nМомент второй, меню может изменять администратор сайта, либо модератор сайта. Изменять можно не все меню, а только те, которые работают использую базу данных. Чтобы узнать какое меню на странице доступно к изменению из админ-панели следует войти в админ-панель и нажать на кнопку «Подсветить меню». Сейчас данная функция, подсветка, работает только с главной страницей. Итак, после нажатия на данную кнопку  CMS-DFDX переправит Вас на главную страницу и возле меню, которое можно изменять, появится некое слово – это название таблицы, с которой работает данное меню.<br>\r\n<br>\r\nПосле того, как Вы узнали какую именно таблицу, следует редактировать, необходимо зайти в админ-панель, в текстовое поле следует вставить имя данной таблицы и нажать на кнопку «Загрузить».<br>\r\n<br>\r\nПосле этого появится информация о том, сколько строк содержит таблица и поле для ввода значения того, сколько Вам редактор должен показать полей. Если Вам нужны пустые поля, для добавления объектов в меню, Вам следует указать больше строк, чем есть на самом деле. Лишние строки не запишутся, поэтому считать точно нет необходимости.<br>\r\n<br>\r\nДалее, Вы ввели число строк и перед Вами откроется таблица с содержимым соответствующего меню. В библиотеке есть девять разных функций, соответственно таблицы могут немного отличаться, но основная идея остается неизменной. Разница только в том, что статусы появились начиная с функции menu9();<br>\r\n<img           src=\"https://b.radikal.ru/b06/2112/f7/59f5314aec32.jpg\" alt=\"форма_редактирования_таблицы\"><br>\r\nПервый столбец содержит номер объекта, часть функций умеют выводить объекты учитывая их номер ID. Можно в любое время зайти и манипулируя значениями в столбце ID изменить порядок расположения объектов в меню. Под каждым меню, при редактировании таблицы, указываются название применяемой функции и её возможностей. В примере используется menu9(), данная функция умеет переставлять объекты согласно их ID, а вот скажем функция menu() не умеет этого делать.<br>\r\n<br>\r\nВторой столбец – это поле NAME. Что следует вводить в это поле нужно читать спецификацию конкретной функции. К примеру, чтобы поставить просто кнопку, то в поле NAME должно находиться то, что будет написано на кнопке, а если нужно поставить текстовое поле, то в данном столбце будет имя текстового поля. Смотрите спецификацию под полем редактирования меню.<br>\r\n<br>\r\nТретий столбец называется URL, однако ссылку туда следует вставлять только в случае, если цель поставить кнопку. Если цель поставить текстовое поле на странице, то в поле URL нужно указать ключевое слово, к примеру «text». Все ключевые слова и правила их использования так-же следует смотреть в спецификации под таблицей. <br>\r\n<br>\r\nВ четвертый столбец вписывается класс для стилизации объекта. Класс может быть общим, либо у каждого объекта свой класс.<br>\r\n<br>\r\nПятое поле отвечает за то, кому именно будет показан каждый объект. Всё о статусах так-же описано в спецификации. Со статусами работают только функции начиная с пятой. <br>\r\nВ админ панели можно не только редактировать меню, но и создавать новые, однако, для их работы нужно войти в программу и расположить функцию там, где она должна быть.<br>\r\n<br>\r\nЧто касается меню и обозначений таблиц. Названия поля или столбцы получили при создании первого меню, и собственно слово меню так-же появилось тогда. Первое меню умеет ставить только кнопки, поэтому всё настроено под это, но со временем функции меню развивались и последняя функция menu9() позволяет создать полноценный сайт, либо полноценную страничку, а используя статусы страничка может быть динамическая. <br>\r\n<br>\r\nСпецификация под таблицей редактирования выводит информацию для конкретной функции меню. Если редактировать таблицу для menu(), то возможности будут разные.<br>\r\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/Wz093iwvOdA\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe><br>\r\n #cmsdfdx#<br>\r\n', 'alfa54', 'cmsdfdx');
INSERT INTO `bd2` (`id`, `name`, `news`, `login_redaktora`, `razdel`) VALUES
(17, 'Скачивание и настройка GitHub.', 'Для того, чтобы заработала нормально командная строка Cmd вместе с Git достаточно сделать несколько простых вещей. Скачать инсталлятор msysGit – это для Windows, запустить его и настроить переменные окружения. Последнее можно не делать, тогда придётся работать с командной строкой от Git. В этой статьи пошаговый путь от скачивания до запуска работы команд Git в командной строке Cmd.<br>\r\n<br>\r\nИтак, скачиваем свою версию Git <a href=\"https://git-scm.com/download/win\" target=\"_blank\"><b>              отсюда</b> </a>, либо, если статья окажется старой, то откуда сможете.<br>\r\n<br>\r\nЗапускаем процесс инсталляции и дожидаемся до конца. Я оставил все галочки как есть, хотя рекомендуется проверить, чтобы была галочка против использования Git Bash и GUI, у меня они стояли по умолчанию.<br>\r\n<br>\r\nПосле окончания установки можно начинать работу с панелью Git Bash, в видео скорее всего я покажу какая она, но мы сделаем ещё один шаг и настроим сопряжение командной строки Cmd и Git.<br>\r\n<br>\r\nСледующим шагом заходим в поисковую систему своей операционной системы и начинаем постепенно писать «изменение системных переменных среды» и выбираете соответствующий пункт в найденных результатах. Это сработало на Windows-7 и Windows-11. Скорее всего сработает на других промежуточных системах.<br>\r\nКогда выберете данный пункт получите окно похожее на это: <br>\r\n<img             src=\"https://c.radikal.ru/c31/2112/4f/71f0d6b5253e.jpg\" alt=\"изменение_переменных_среды_окружения\"><br>\r\nНаша цель – это кнопка внизу окна «Переменные среды…», жмём её.<br>\r\n<img            src=\"https://b.radikal.ru/b26/2112/91/b3e42fa5c366.jpg\" alt=\"переменные_среды\"><br>\r\n<br>\r\nСледующее окно будет поделено на две части, нас интересует нижняя часть. Там находим слово Path – это и есть системная переменная окружения, которую нужно изменить. На против неё находится значение данной переменной. Чтобы у нас всё заработало необходимо перейти в конец строки – значения системной переменной Path и поставить там «;», если они отсутствуют.<br>\r\nПосле этого добавляем без пробелов то, что на следующей строке ниже.<br>\r\n<code>      <br>\r\nC:\\Program Files\\Git\\bin\\;C:\\Program Files\\Git\\cmd\\<br>\r\n</code><br>\r\nВсё. Закрываем и открываем Cmd и проверяем версию Git командой:<br>\r\n<code>      <br>\r\ngit –version<br>\r\n</code><br>\r\nЕсли версию получили, значит всё сделали правильно.<br>\r\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/2qeWmRBlcA0\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe><br>\r\n#git#<br>\r\n<br>\r\n<br>\r\n', 'alfa54', 'git'),
(18, 'Доработка текстового редактора от CMS-DFDX', 'Сегодня, 30.12.2021 был доработан текстовый редактор. Предыдущая модификация позволяла размещать на странице только одну картинку. В последней версии редактора данный недостаток устранен.<br>\r\n<br>\r\nУстанавливаются картинки простым оформлением тега (img). Внизу, под окном редактирования есть небольшая справочка, откуда можно просто скопировать и вставить необходимую строку, после чего просто изменить ссылку и описание атрибута alt.<br>\r\n<img   src=\"https://b.radikal.ru/b22/2112/c6/821c8ef2e7e3.jpg\" alt=\"подсказки\" &gt<br>\r\nТут-же присутствует подсказка, что, как и раньше, заполнять атрибут alt необходимо и если картинок несколько, то у всех атрибуты должны быть разные. Для CMS -а принципиально не важно, что там написано, атрибут является маркером расположения картинки.<br>\r\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/OA9RH-K0pBk\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe><br>\r\n#cmsdfdx#', 'alfa54', 'cmsdfdx'),
(19, 'Генерация SSH ключа и добавление его в GitHab.', 'Первое, что нужно сделать – это зарегистрироваться на портале GitHab и скачать себе Git на компьютер. Регистрация вполне себе обычная, скачивание и настройка была в предыдущей статье. Для работы с этой статьёй допускаем, что у Вас уже есть акаунт на GitHab и программа Git Bush. Git Bush – это командная строка от GitHab и она устанавливается при установке пакета Git.<br>\r\nПервое, что нужно сделать – это запустить Git Bush используя кнопку Пуск и дальше как обычно, нашли и запустили. У Вас должна запуститься командная строка как на рисунке.<br>\r\n<br>\r\n<img     src=\"https://c.radikal.ru/c06/2112/e2/cdc51e5dd839.jpg\" alt=\"Git Bush\" &gt<br>\r\n<br>\r\nВторой шаг – генерация SSH ключа.<br>\r\nГенерируем SSH ключ с помощью команды <br>\r\n<br>\r\n<code>    <br>\r\nssh-keygen <br>\r\n</code><br>\r\nМожно скопировать и с помощью правой кнопки вставить в окно Git Bush. После этого получаем ответ с предложением ввести имя файла, в котором будет храниться ключ. Вводим просто имя файла, я введу слово «test»<br>\r\n<br>\r\n<code>    <br>\r\nGenerating public/private rsa key pair.<br>\r\nEnter file in which to save the key (/c/Users/Александр/.ssh/id_rsa): test<br>\r\n</code><br>\r\nНесмотря на то, что программа написала, что создаст ключи тут: <br>\r\n<br>\r\n<code>    <br>\r\n/c/Users/Александр/.ssh/id_rsa  здесь их не будет<br>\r\nони будут тут: /c/Users/Александр/, то есть в домашней папке.<br>\r\n</code><br>\r\nПосле этого Вас попросят ввести и подтвердить пароль, я просто нажимаю на ENTER.<br>\r\n<br>\r\n<code>    <br>\r\nEnter passphrase (empty for no passphrase):<br>\r\nEnter same passphrase again:<br>\r\n</code><br>\r\nЕсли всё сделано правильно, то в указанной выше папке появится файл test.txt и test.pub. Нас интересует второй файл, в нем располагается публичный ключ. Если найти этот файл не удается, можно его вписать в строку поиска в меню WINDOWS ПУСК. Файл появится, когда введете его имя полностью.<br>\r\nВ зависимости от Ваших настроек его можно будет открыть двойным щелчком или через «открыть файл с помощью». У меня он открывается программой Notepad++. Нам понадобится скопировать всё содержимое этого файла и вставить в форму на сайте  GitHab.<br>\r\nШаг следующий, переходим на сайт GitHab и входим в свою учётную запись.<br>\r\nСправа вверху жмём на картинку своего профиля и в выпадающем меню выбираем опцию Настройки.<br>\r\n<br>\r\n<img     src=\"https://b.radikal.ru/b15/2112/5e/0583bac1fcb4.jpg\" alt=\"Выбрать настройки\" &gt<br>\r\n<br>\r\nНа появившейся странице слева располагается меню, в котором следует найти кнопку с надписью SSH, на момент написания статьи – это «SSH and GPG keys». Жмём и попадаем на страницу, на которой есть кнопка «News SSH key» или «add SSH key». Жмём и попадаем на страницу с формой, в которую следует вводить тот ключ, который мы получили в файле test.pub.<br>\r\nВ title я вписываю некое название, любое, впишу «test», а в поле ниже вставляю то, что содержится в файле test.pub, не путаем с файлом test.txt.<br>\r\n<br>\r\n<img     src=\"https://d.radikal.ru/d02/2112/ba/3d90857794bd.jpg\" alt=\"вставляем ключ\" &gt<br>\r\n<br>\r\nПосле этого жмём на «add SSH key» и получаем <br>\r\n<br>\r\n<img     src=\"https://c.radikal.ru/c29/2112/a5/6c2971c2da0a.jpg\" alt=\"add SSH key\" &gt<br>\r\n<br>\r\nВсё готово, остаётся увидеть ключ в репозитории, для этого снова открываем выпадающее меню нажатием иконки профиля и выбираем «Your repositories»<br>\r\n<br>\r\n<img     src=\"https://d.radikal.ru/d13/2112/8f/4a40e70f23c1.jpg\" alt=\"Your repositories\" &gt<br>\r\n<br>\r\nПереходим на страницу выбора репозитория, выбираем свой.<br>\r\n<br>\r\n<img     src=\"https://b.radikal.ru/b04/2112/a8/8755b5a7feca.jpg\" alt=\"репозиторий выбираем\" &gt<br>\r\n<br>\r\nНаходим зеленую кнопку «Code» нажимаем.<br>\r\n<br>\r\n<img     src=\"https://c.radikal.ru/c41/2112/1c/b1dfbc40d311.jpg\" alt=\"Code\" &gt<br>\r\n<br>\r\nВо вкладке SSH видим нечто похожее на это. Всё готово, ключ SSH сгенерирован и подключен к Вашему акаунту на GitHab.<br>\r\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/_f1WbMG--aQ\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe><br>\r\n#git#<br>\r\n<br>\r\n', 'alfa54', 'git'),
(20, 'Генерация номера PESEL', 'В статье опишу в двух словах что такое PESEL, правила его создания и вариант моего кода для реализации задачи.<br>\r\n<br>\r\n<b>       Задача: </b>сгенерировать код PESEL. Данную задачу я получил в качестве тестового задания на втором этапе рекрутации в программисты PHP.<br>\r\n<br>\r\n<b>       Песель или Pesel</b> – это номер из 11 цифр, который идентифицирует человека в Польше. Кто и зачем его выдает описано в википедии, дальше о том, как он создается.<br>\r\nНекоторое время понадобилось для того, чтобы перевести и разобраться с тем, как же его выдают, разобрался и пересказываю своими простыми словами.<br>\r\n<br>\r\n<b>       Первые две цифры</b> – это последние две цифры года рождения. 1922 и 2022 год рождения будут давать первые две цифры как 22.<br>\r\n<br>\r\n<b>       Третья и четвертая цифры </b>– это номер месяца ВНИМАНИЕ вместе с закодированным столетием. Есть специальная таблица, в которое есть вес каждого столетия.<br>\r\nДля лет: 1800–1899 – 80<br>\r\nДля лет: 1900–1999 – 00 (то есть остается как есть)<br>\r\nДля лет: 2000–2099 – 20<br>\r\nДля лет: 2100–2199 – 40<br>\r\nДля лет: 2200–2299 – 60<br>\r\nЦифра против века и есть его вес, который добавляется к месяцу. Теперь, если у вас есть одинаковые даты рождения, но разные столетия, то цифры 3 и 4 будут разные. Если вы родились в 18-м веке, то к вашему номеру месяца будет добавлено 80, то есть январь – это месяц 81. В то время как в 19-м веке январь является месяцем 1-м, а в 20-м веке, январь будет 21-м месяцем. <br>\r\n<br>\r\n<b>       Цифра 5 и 6 незамысловатые </b>– это день вашего рождения.<br>\r\n<br>\r\n<b>       Цифры 7,8,9 </b>– это некий номер, скорее всего порядковый или случайный, на который ранее не было зарегистрировано другого человека. Эти 3 цифры используются как отличие для людей, родившихся в один день. Но не спешите недоумевать – это вовсе не означает, что если в день родилось 1000 людей, то кому-то не хватит номера, разбираемся дальше.<br>\r\n<br>\r\n<b>       Есть цифра №10,</b> которая характеризует гендерную принадлежность маркируемого индивидуума, если цифра чётная, то промаркирован мужчина, если цифра нечетная, то промаркирована женщина. Немного троллинга не помешает.<br>\r\nТо есть у нас есть 0,2,4,6,8 для мужчин и 1,3,5,7,9 для женщин. Таким образом запас номеров для мужчин и женщин равны по 5*999 или в день может родиться 4995 мальчиков и 4995 девочек.<br>\r\n<br>\r\n<b>       Последняя цифра</b> в этом номере самая сложная, её задача исключить ошибку при вводе или выдаче номера – это <b>       контрольная сумма</b> предыдущих 10-ти цифр. В википедии написана весьма жуткая формула, но по факту она очень проста.<br>\r\nУ каждой из первых 10-ти цифр есть свой вес. <br>\r\nВес цифры №1=1<br>\r\nВес цифры №2=3<br>\r\nВес цифры №3=7<br>\r\nВес цифры №4=9<br>\r\nВес цифры №5=1<br>\r\nВес цифры №6=3<br>\r\nВес цифры №7=7<br>\r\nВес цифры №8=9<br>\r\nВес цифры №9=1<br>\r\nВес цифры №10=3<br>\r\nЛегко запомнить, последовательность 1,3,7,9 повторяется до конца.<br>\r\nКаждый из номеров pesel, первые десять цифр, поочередно, отдельно, умножаются на свой вес. После этого всё складывается, получается некая цифра, к примеру 87. Далее берется остаток, от целочисленного деления или деления по модулю на 10. В данном примере – это 7. После этого из константы 10, отнимаем то, что получили после деления по модулю на 10 и получаем последнюю 11-ю цифру номера pesel. Если после деления по модулю остается 0, то и последняя цифра будет нулем, не отнимаем от 10-0 для получения результата.<br>\r\n<br>\r\n<b>    Пример</b><br>\r\nДля пересчёта последней цифры возьму произвольный pesel 1010101010, одиннадцатую цифру сейчас подсчитаем.<br>\r\nДля удобства пишу этот номер вертикально, добавляю знак *(умножить) и добавляю веса каждого элемента номера.<br>\r\n1*1=1<br>\r\n0*3=0<br>\r\n1*7=7<br>\r\n0*9=0<br>\r\n1*1=1<br>\r\n0*3=0<br>\r\n1*7=7<br>\r\n0*9=0<br>\r\n1*1=1<br>\r\n0*3=0<br>\r\nТеперь результат суммируем: 1+0+7+0+1+0+7+0+1+0=17<br>\r\nДальше делим по модулю на 10 или находим остаток, от целочисленного деления на 10. 17%10=7. То есть отнимаем по 10 до тех пор, пока число больше или равно 10. <br>\r\nЕсли бы в результате получился 0, к примеру результат суммы был бы не 17, а 20 или 30 или 40…, то одиннадцатая цифра была бы равна 0, но после деления осталась цифра 7, значит от 10-7=3. Вот таким образом получается цифра 3 и наш номер pesel приобретает последнюю цифру и становится равным :10101010103.<br>\r\n<br>\r\n<br>\r\n<a href=\"http://www.dfdx.uxp.ru/leson/pesel.php\" target=\"_blank\">Поиграть с программой генерации номера PESEL можно тут.</a><br>\r\n<br>\r\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/hV3cPv8vVf4\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe><br>\r\n#leson#', 'alfa54', 'leson'),
(21, 'Генерация номера Pesel.', 'В предыдущей статьи было описание принципа создания номера PESEL, в этой статье опишу файлы формирования страницы или код программы.<br>\r\n<br>\r\nДля решения данной задачи было создано два отдельных файла, так как – это отдельный проект. Первый файл – это собственно страница, второй файл – это библиотека с функциями. Есть ещё и третий файл со стилями, но его мы рассматривать не будем, статья про функционал, а не про оформление.<br>\r\n<br>\r\nВ статье буду показывать код кусками и объяснять работу функций из библиотеки. Позже прикручу к редактору кнопку для скачивания файлов и дам файлы на скачивание.<br>\r\n<br>\r\n<b>             Верхняя часть</b> основной страницы – это стандартные настройки, их в данной статье нет необходимости рассматривать, просто даю фото.<br>\r\n<img          src=\"https://b.radikal.ru/b33/2201/74/a9516b351256.jpg\" alt=\"верхние настройки\"><br>\r\n<br>\r\n<b>             В строках 10-13</b>  подключение библиотеки функций. <br>\r\n<img         src=\"https://b.radikal.ru/b09/2201/f3/eb8560c57192.jpg\" alt=\"подключение библиотеки\"><br>\r\n<br>\r\n<b>             В строках 15-38</b> рисуется форма и здесь немного остановимся.<br>\r\n<img         src=\"https://b.radikal.ru/b15/2201/df/ba32956dbd58.jpg\" alt=\"рисуем форму ввода\"><br>\r\nВ форме есть поля для ввода даты и пола.<br>\r\n<b>             Строка 18:</b> <br>\r\n-в этой строке отрабатывает функция dataNorm(), которая проверяет правильность ввода даты. Описание функции внизу. Если функция возвращает false, то значит есть ошибка ввода даты.<br>\r\n<img              src=\"https://a.radikal.ru/a29/2201/1e/8fe331aaba95.jpg\" alt=\"описание функции dataNorm\"><br>\r\nСтрока 4 проверяет есть ли данные в массиве POST, если нет, то выйти из функции и вернуть false. <br>\r\nСтрока 5 проверяет диапазон годов, которые возможно закодировать в песель, если в диапазон не входим, то вернуть false.<br>\r\nСтроки 6-9 проверяют правильность ввода месяца и дня, если они входят в интервалы, то производим валидацию даты функцией checkdate(). Если всё срабатывает правильно, то функция вернет true[11], если что-то пошло не так, то false[12].<br>\r\n<br>\r\n<b>             Строки 19-21:</b>  <br>\r\n<img       src=\"https://d.radikal.ru/d25/2201/75/22142b2b8975.jpg\" alt=\"класс ошибки даты\"><br>\r\n-в зависимости от результата отработки функции dataNorm() вписывается стилевой класс для ошибок, или для правильного ввода. В программе Вы видите красные прямоугольники вокруг поля с датой, или не видите.<br>\r\n<br>\r\n<b>             Строки 23-25:</b>  <br>\r\n-выводят три поля, для ввода года, месяца и дня рождения. Здесь всё стандартно по html, только в значение VALUE= данные вписывают функции. Функции выдают значения из массива POST, если они есть, если нет, функции выдают подсказки предназначения полей. <br>\r\n<img       src=\"https://b.radikal.ru/b00/2201/01/72ea18cfdef0.jpg\" alt=\"поля даты ввода\"><br>\r\nОписания функций внизу.<br>\r\n<img       src=\"https://b.radikal.ru/b18/2201/e1/77b1f0c931ab.jpg\" alt=\"вывести в поля ввода данные или подсказки\"><br>\r\n<br>\r\n<b>             Строки 28:</b>  <br>\r\nОпределяет задан ли пол, если нет, то подставляет стиль ошибки, если пол введен, то стиль нормальный.<br>\r\n<img       src=\"https://a.radikal.ru/a32/2201/2e/a7157f83f2b6.jpg\" alt=\"ошибка ввода пола или нет\"><br>\r\n<br>\r\n<b>             Строки 30-35:</b>  <br>\r\n-форма выбора пола. Функции там расположены для того, чтобы задавать параметр checked в радиокнопки. В этом случае не нужно при каждой генерации вводить заново пол, только если он меняется.<br>\r\n<img              src=\"https://c.radikal.ru/c20/2201/7d/33abb3048be8.jpg\" alt=\"форма выбора пола\"><br>\r\nФункция gender() описана внизу.<br>\r\n<img              src=\"https://a.radikal.ru/a21/2201/0c/5987e9f6a942.jpg\" alt=\"описание функции gender\"><br>\r\n<br>\r\n<b>             Строки 43-48:</b>  <br>\r\n<img              src=\"https://a.radikal.ru/a16/2201/f9/11d68141e2b5.jpg\" alt=\"если с данными норм\"><br>\r\nЕсли с вводом данных всё нормально – это проверка в строке 43, то запускаем некоторые вычисления.<br>\r\nСтрока 45 генерирует случайное число от 100 до 999, для 7,8 и 9 цифры песеля.<br>\r\nВ строке 46 используются две функции. Функция nomer1_6()<br>\r\nпреобразовывает значения даты в 6-значный код, там учитывается и закодированный месяц, в зависимости от столетия. Описание функции внизу.<br>\r\n<img              src=\"https://a.radikal.ru/a03/2201/04/123591d0cc4a.jpg\" alt=\"функция nomer1_6\"><br>\r\nВторая функция в 46 строке генерирует случайное чётное или случайное нечетное число в зависимости от того, для кого песель, для мужчины или для женщины. Функция описана внизу.<br>\r\n<img              src=\"https://a.radikal.ru/a15/2201/0b/f1abab66d606.jpg\" alt=\"функция цифры 10\"><br>\r\nВ строке 47 вычисляется последняя цифра песеля – контрольная сумма.<br>\r\n<img       src=\"https://a.radikal.ru/a14/2201/07/265ee828d330.jpg\" alt=\"контрольная сумма\"><br>\r\nКонтрольную сумму считает функция nomer11(), использую при этом дополнительную функцию, выводящую вес каждого элемента в зависимости от его позиции в номере песеля.<br>\r\n<br>\r\n<b>             Строки 49-50:</b>  <br>\r\n-данные строки выводят готовый песель.<br>\r\n<img       src=\"https://d.radikal.ru/d28/2201/b4/b92397d62d0f.jpg\" alt=\"вывод результата\"><br>\r\n<br>\r\nПодробнее описание кода будет в видео под статьёй.<br>\r\n<br>\r\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/t-ShtEFZiMo\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe><br>\r\n<br>\r\n#leson#', 'alfa54', 'leson'),
(22, 'Как подключиться к репозиторию GitHub', 'О том, как создать свой репозиторий, настроить его и подключить SSH ключ написано в предыдущих статьях. Вдогонку лишь отмечу, что путь PATH в WINDOWS-11 у меня сам прописался.<br>\r\n<br>\r\nЗдесь покажу как подключиться к существующему репозиторию с другого компьютера.<br>\r\n<br>\r\nДействия предельно просты. Открываете командную строку Git Bush и клонируете репозиторий в выбранную папку.<br>\r\n<br>\r\nШаг 1: создаете папку, куда хотите, чтобы скопировался Ваш проект.<br>\r\nШаг 2: командами cd .. и cd path переходите в нужную директорию.<br>\r\nДальше пишите команду:<br>\r\n<code>    <br>\r\ngit clone https://github.com/dfdxAlex/redaktor.git<br>\r\n</code><br>\r\nВ примере используется ссылка на мой проект на GitHub, у вас будет Ваша ссылка.<br>\r\nДанную ссылку можно найти в корне своего репозитория нажав на кнопку Code<br>\r\n<img     src=\"https://d.radikal.ru/d09/2201/02/8f3dd3c9d237.jpg\" alt=\"код репозитория\" &gt<br>\r\n<br>\r\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/fT2Snc3IVC8\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe><br>\r\n<br>\r\n#git#<br>\r\n', 'alfa54', 'git'),
(23, 'Автоматизация работы с GitHub', 'При работе с GitHub часто приходится совершать одни и те же действия. При первом входе в командную строку необходимо перейти в папку проекта, при следующих отправках исправленного проекта в репозиторий так же нужно выполнять одинаковые команды. Если в каждой папке, из которой есть вероятность периодически отправлять проекты в репозиторий создать командный файл, то работа с GitHub становится не такой уж и скучной.<br>\r\nНедостатком данного метода является невозможность или бессмысленность отправки комментариев к последнему изменению файлов.<br>\r\n<br>\r\nИтак, если для Вас данный метод подходит, то создаем командные файлы во всех папках, откуда может возникнуть необходимость отправлять очередную версию документа в репозиторий.<br>\r\nУ меня таких мест два. Первое место – это рабочая папка командной строки cmd, при первом открытии командной строки файл будет запускаться оттуда. Второе место – это рабочий каталог моего проекта. И да, альтернативным вариантом будет работа с переменной окружения, чтобы интерпретатор командной строки CMD не найдя файл в текущей папке, искал его в других местах, однако вариант с несколькими командными файлами проще, гибче и эффективнее, ибо команды git add ... всё равно нужно либо писать от руки, либо помещать в командный файл.<br>\r\nПервое, что необходимо – это узнать с какой папки стартует командная строка, скорее всего – это:<br>\r\n<code>   <br>\r\nС:/Пользователи/Ваша учётка<br>\r\n</code><br>\r\nУ меня это:<br>\r\n<code>   <br>\r\nC:/Пользователи/Saturn<br>\r\n</code><br>\r\nРабочий проект у меня находится в папке:<br>\r\n<code>   <br>\r\nD:/tmp<br>\r\n</code><br>\r\nТеперь, если я нахожусь в рабочей папке CMD и мне необходимо запустить команды Git, то для начала необходимо перейти в нужную папку. Поэтому, в файле, который находится в рабочей папке, интерпретатора командной строки я в начале напишу команды перехода в нужный каталог, а уже после этого команды Git для отправки файлов в репозиторий.<br>\r\nСодержимое файла, который находится в рабочей папке интерпретатора командой строки:<br>\r\n<code>   <br>\r\ngoto start  <br>\r\nЭтот файл для перехода в папку с проектом и для запуска<br>\r\nкоманд отправки измененных файлов проекта в репозиторий. <br>\r\nДопустим проект находится на диске D: в папке tmp<br>\r\n:start<br>\r\nd: ::переход на диск D:, <br>\r\ncd tmp ::переход на диск D:, <br>\r\n:: дальше команды Git<br>\r\ngit add .<br>\r\ngit commit -m “комментарий постоянный”<br>\r\ngit push<br>\r\n</code><br>\r\nНемного иначе будет выглядеть переход в нужную папку в том случае, если Ваш проект находится на том же диске, что и рабочая папка интерпретатора. Если Ваш проект допустим находится на диске C: в папке xampp/htdocs/MyProekt:<br>\r\n<code>   <br>\r\n goto start  <br>\r\nЭтот файл для перехода в папку с проектом и для запуска<br>\r\nкоманд отправки измененных файлов проекта в репозиторий. <br>\r\nДопустим проект находится на диске C: в папке xampp/htdocs/MyProekt:<br>\r\n:start<br>\r\ncd .. :: переход в родительскую папку столько раз, сколько необходимо, чтобы попасть на диск C:<br>\r\ncd .. :: переход в родительскую папку столько раз, сколько необходимо, чтобы попасть на диск C:<br>\r\n:: Если Вам нужно больше раз, то добавьте верхнюю строку столько раз, сколько не хватает. <br>\r\n:: оказавшись на диске C: переходим в нужную папку<br>\r\ncd xampp/htdocs/MyProekt<br>\r\n:: далее команды Git<br>\r\ngit add .<br>\r\ngit commit -m “комментарий постоянный”<br>\r\ngit push<br>\r\n</code><br>\r\nМы разобрались с отправкой файлов в репозиторий при первом открытии командной строки. После первой отработки, если не закрывать командную строку, то интерпретатор остается в рабочей папке Вашего проекта. Чтобы быстро отправить файлы в репозиторий второй и следующие разы, необходимо создать файл с командами Git без перехода по папкам, ибо мы уже находимся в рабочей папке проекта.<br>\r\n<code>   <br>\r\n:: отправка файлов в репозиторий из папки проекта<br>\r\ngit add .<br>\r\ngit commit -m “комментарий постоянный”<br>\r\ngit push<br>\r\n</code><br>\r\nТребования к командному файлу.<br>\r\nПроще всего данные файлы создавать в «блокноте» исправляя расширение .txt на .bat.<br>\r\nКаждый файл должен быть в своей папке и очень удобно будет если у всех файлов будет одинаковое название. Если у Вас несколько папок в проекте, то данный файл можно скопировать в каждую папку.<br>\r\n<br>\r\nВот и всё. Если я что-то упустил, то в видео всё есть. Всем удачи и подписывайтесь на мой канал, ведь там уже 2 подписчика).<br>\r\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/V3E6WXXjVls\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe><br>\r\n#git#<br>\r\n', 'alfa54', 'git'),
(24, 'PSR-0. Стандарт помечен как устаревший.', 'Цель стандарта привести к одной функции – загрузчику все подключения библиотек в проекте.<br>\r\nЕсли у Вас в проекте одна библиотека, то Вы можете попробовать данный стандарт просто ради спортивного интереса.<br>\r\nЕсли у Вас в проекте много библиотек, то данная идея весьма привлекательна, если в ней разобраться.<br>\r\n<br>\r\nИтак, весь стандарт сводится к тому, что пространство имен должно быть написано таким образом, чтобы функция внизу смогла  загрузить нужный класс тогда, когда он потребуется. Данная функция в свою очередь работает таким образом, что в момент, когда у Вас есть необходимость подключить класс, то есть Вы в коде создаете объект, он передается во входной параметр функции autoload($Name) и функция, преобразовав данный параметр подключает нужный файл. Вот так просто и интересно всё устроено.<br>\r\n<br>\r\nТеперь требования оформления, которые принимает данная функция.<br>\r\n<br>\r\n1.	Каждый класс должен быть в своем файле и называться так, как называется класс. Это необходимо потому, что имя файла для подключения легко выделить из входящего параметра – это один из моментов, которые реализует функция. Конечно, можно переделать так, чтобы при входном классе Class1 и входном классе Class2 подключался один файл, но тогда теряется идея стандартизации. Правда такой подход может пригодиться из-за того, что Ваш проект старый и Вы не хотите старые библиотеки дробить на части, но это уже другая история.<br>\r\n<br>\r\n2.	Второе условие сводится к тому, что Ваши классы должны лежать в соответствующих пространству имен папкам. К примеру, имея папку для классов «Class», а сам класс находится в пространстве имён My, то фактичное расположение файла с классом должно находиться в папках Class/My/MyClass.php. Иначе функция не найдёт Ваш файл с классом. Кроме этого, если у Вас есть пространство имён, в котором присутствует подчеркивание, то функция его заменит на слеш, поэтому Вам нужно добавлять папки везде, где в пространстве имен есть подчеркивание. На пример имея папку с классами «Class», а пространство имен My_Class, то фактическое место положения вашего файла с классом должно быть тут: Class/My/Class/ MyClass.php.<br>\r\n<br>\r\n3.	Ну и третий момент, который должен был быть первым – это рекомендация для создания пространства имен такое, которое маловероятно повторится и не усложним Вам жизнь в будущем. В пространстве имен на первом месте ставится производитель кода (везде одинаков), потом некое пространство имен (произвольное) и потом название класса. На пример производитель кода DFDX, код для библиотеки, связанной с редактором, и класс для подключения к базе данных initBd.php, тогда пространство имени для этого класса должен быть namespace DFDX\\redaktor; Естественно, файл класса должен находиться в папке DFDX\\redaktor. <br>\r\n<br>\r\nНу собственно вот всё, что я понял из данного стандарта. В ролике я покажу как работает код загрузчика в моем проекте.<br>\r\n<img     src=\"https://a.radikal.ru/a01/2201/04/54a2bbc22df3.jpg\" alt=\"автозагрузчик\" &gt<br>\r\n<br>\r\n<br>\r\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/veufVMo-5Ck\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe><br>\r\n#psr#', 'alfa54', 'psr'),
(25, 'PSR-1. Стандарт оформления кода PHP.', 'Данный формат является весьма простым к исполнению, более того, частично его скорее всего исполняют многие.<br>\r\n<b>  Первый пункт стандарта</b> относится к тегам, обозначающим PHP код. По стандарту рекомендуется использовать только такие:<br>\r\n<br>\r\n<img      src=\"https://a.radikal.ru/a19/2201/9a/27c07c4c86b4.jpg\" alt=\"теги\" &gt<br>\r\n<br>\r\n<b>  Второй пункт</b> относится к кодировке файлов с кодом, должна быть кодировка UTF-8.<br>\r\n<br>\r\n<b>  Третий пункт</b> относится к разделению файлов. По сути объявления и описания всех классов, функций, констант должно производиться в отдельном от файла, использование этих классов, функций или констант – отдельно. То есть описываете методы и классы, а затем, в других файлах подключаете их и используете. Также работает и в другую сторону, если в файле программируется логика, то там не должно быть описание методов, классов или констант.<br>\r\nНиже пример оформления кода не по правилам. Здесь одновременно код программы с описанием функций. <b>  Логика + описание = Плохо.</b><br>\r\n<br>\r\n<img      src=\"https://a.radikal.ru/a42/2201/03/129bb0a4b809.jpg\" alt=\"структура грязная\" &gt<br>\r\n<br>\r\nНиже показан код только с описанием функций. <b>  Только описание или только логика – это хорошо.</b><br>\r\n<br>\r\n<img      src=\"https://d.radikal.ru/d33/2201/ab/afe4a39cfd1b.jpg\" alt=\"структура чистая\" &gt<br>\r\n<br>\r\n<b>  Четвертый пункт</b> – это пространство имен, оно должно быть создано по правилам PSR-0 или PSR-4. Имена классов объявляются по принципу StudlyCaps, то есть начинается с большой буквы и каждое новое слово также с большой буквы.  MyClass <br>\r\n<br>\r\n<b>  Следующее </b>– это термина класс относится к классам, интерфейсам и трейтам.<br>\r\nКонстанты классов объявляются большими буквами со знаками нижнего подчеркивания как разделителями. CONST_COLOR=’Red’<br>\r\nМетоды объявляются по принципу camelCase(), то есть начинаем писать с прописной буквы и каждое следующее слово с большой буквы. myMethod();<br>\r\n<br>\r\nНу вот, собственно, и всё.<br>\r\n<br>\r\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/nlGgdoMOq3g\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe><br>\r\n#psr#<br>\r\n', 'alfa54', 'psr'),
(26, 'Доработка редактора News. CMS-DFDX.', 'Доброго времени суток. Коротенькая статья, касается доработки текстового редактора CMS-DFDX.<br>\r\n<br>\r\nДоработка относится к загрузке картинок в статью. Старый метод, остался рабочим, заключается в прописывании тегов HTML, либо простого копирования образцы. Образец находится под полем редактирования статьи.<br>\r\nВ последнем обновлении загружать картинку можно с помощью формы, она попадает в отдельную папку на сервере. Итак, по шагам.<br>\r\n[IMG]qzovofbudx.gif[IMG]<br>\r\nПод полем редактирования статьи находятся формы, в которые следует вписать ссылку на картинку из интернет-ресурса – это первое поле. Второе поле для атрибута alt, третье и четвертое поле для ширины и высоты картинки.<br>\r\n[IMG]smmbwsddmv.gif[IMG]<br>\r\nДля загрузки картинки достаточно поместить ссылку на картинку в первое поле и нажать на кнопку «Загрузить». Если картинка существует и подходит по типу и параметрам, то в полях ширины и высоты появятся реальные параметры картинки, на этом этапе их можно редактировать, они пропишутся в соответствующие атрибуты. Если необходимо вписать alt, то вписываем и жмём «Сохранить». <br>\r\n<br>\r\nПосле этого появится строка с BB кодом, который следует скопировать и вставить в нужное место текста. Всё.<br>\r\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/jBPFzPyAuuE\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe><br>\r\n#cmsdfdx#', 'alfa54', 'cmsdfdx'),
(27, 'Работа с редактором DFDX (news1). Загрузка изображений.', 'Редактор новостей, обновление от 19.01.2022.<br>\r\nВ модуле news1 доработан функционал загрузки картинок на сервер сайта.<br>\r\nПошаговая инструкция о том, как пользоваться последним обновлением редактора будет в видеоролике в конце статьи. Здесь же только описание правок, которые были внесены. <br>\r\n[IMG]ctnjxbahzz.gif[IMG]<br>\r\n<br>\r\nПункт 1. Модуль остался совместимым с предыдущими его версиями.<br>\r\nПункт 2. Доработан функционал загрузки картинок на сервер сайта или хостинга. <br>\r\n<br>\r\nЗагрузка происходит в 2 этапа. Сначала вносите ссылку на картинку в соответствующее поле и жмёте кнопку «Загрузить». При этом картинка загружается в оперативную память и проверяется. <br>\r\n<br>\r\nЕсли загрузка прошла неудачно, будет соответствующее сообщение с причиной неудачи. К таким причинам можно отнести некорректный тип файла, допускаются только файлы типов (jpg,png,bmp,gif,tif). Файл может быть слишком большой, по умолчанию максимальный размер установлен около 90 кбайт, и др. <br>\r\n<br>\r\nЕсли загрузка прошла нормально, Вы получите параметры высоты и ширины загруженной картинки в соответствующих полях. После удачной загрузки можно прописать атрибут alt и задать новые параметры высоты и ширины, они пропишутся в атрибуты width и height. <br>\r\n<br>\r\nПосле обновления данных жмём кнопку «Загрузить». На этом этапе картинка сохраняется на сервере и делается запись в базу данных. Если всё прошло удачно, то над формой загрузок появится код, который необходимо вставить в нужное место в тексте статьи, там и будет картинка.<br>\r\n<br>\r\nЕсли Вы по какой-то причине потеряли данный код, то можно повторно загрузить картинку по ссылке, если картинка загружалась ранее, то уже на этапе загрузки Вы получите тот же самый код, он будет взят из базы данных, где был сохранен ранее, повторной записи или добавления второго такого же файла не будет даже после нажатия на кнопку «Сохранить».<br>\r\n<br>\r\nТак же следует отметить, что старый способ добавления картинок по ссылке остается актуальным. Если нет необходимости загружать картинку на свой хостинг, то лучше всего скопировать образец тега img  из подсказок и вставить в него свою ссылку. Напоминаю, что в данном варианте необходимо для каждой картинки прописать оригинальный alt.<br>\r\n<br>\r\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/ZsAeOFUJ_Es\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe><br>\r\n#cmsdfdx#<br>\r\n<br>\r\n<br>\r\n', 'alfa54', 'cmsdfdx'),
(28, 'Структура HTML страницы.', 'Страница  HTML состоит из нескольких блоков или частей. В самом верху, первой строкой располагается название типа документа или тип документа. В случае, если у Вас документ является HTML5, то в первой строке у Вас должно быть слово <br>\r\n<br>\r\n<code>      <br>\r\n&ltDOCTYPE html&gt <br>\r\n</code><br>\r\n<br>\r\nПосле этого весь документ HTML должен быть заключен в теги:<br>\r\n<br>\r\n<code>      <br>\r\n&lthtml&gt <br>\r\n<br>\r\n&lt/html&gt <br>\r\n</code><br>\r\n<br>\r\nЭти теги ограничивают главный контейнер HTML документа, то есть просто весь документ. Контейнер означает, что в него можно что-то положить.<br>\r\n<br>\r\nСледующей структурой HTML странички является блок заголовка, он обрамлен тегами:<br>\r\n<br>\r\n<code>      <br>\r\n&lthead&gt <br>\r\n<br>\r\n&lt/head&gt <br>\r\n</code><br>\r\n<br>\r\nЗдесь располагаются настройки документа, язык к примеру, так же здесь осуществляется подключение стилей, к примеру и много другой служебной информации.<br>\r\n<br>\r\nСодержимое, которое должен увидеть, пользователь обрамляется тегами:<br>\r\n<br>\r\n<code>      <br>\r\n&ltbody&gt <br>\r\n<br>\r\n&lt/body&gt <br>\r\n</code><br>\r\n<br>\r\nВ итоге получаем такую структуру документа:<br>\r\n<br>\r\n<code>      <br>\r\n&ltDOCTYPE html&gt <br>\r\n<br>\r\n&lthtml&gt <br>\r\n    &lthead&gt <br>\r\n<br>\r\n    &lt/head&gt <br>\r\n<br>\r\n    &ltbody&gt <br>\r\n<br>\r\n    &lt/body&gt <br>\r\n<br>\r\n&lt/html&gt <br>\r\n</code><br>\r\n<br>\r\nПримерно так выглядит HTML страничка.<br>\r\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/ok4GjaFf6Io\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe><br>\r\n#html3html5xhtml#', 'alfa54', 'html3html5xhtml'),
(29, 'Заголовки h1-h6', 'Для разметки документов или страниц html существует 6 заголовков, соответственно от h1 до h6. Отличаются они размером шрифта. Заголовок h1 – это самый крупный шрифт, заголовок h6 является самым мелким шрифтом.<br>\r\n<br>\r\n<h1>Заголовок h1</h1><br>\r\n<h2>Заголовок h2</h2><br>\r\n<h3>Заголовок h3</h3><br>\r\n<h4>Заголовок h4</h4><br>\r\n<h5>Заголовок h5</h5><br>\r\n<h6>Заголовок h6</h6><br>\r\n<br>\r\nСледовательно, в начале любого документа, заголовке, располагается тег h1 или h2, дальше используются более мелкие заголовки. На пример название статьи заголовком h1, а название пунктов заголовками h2 или h3 и так далее. В видео под текстом производится разметка текста с помощью заголовков.<br>\r\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/mnNPfLHN2pM\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe><br>\r\n#html3html5xhtml#', 'alfa54', 'html3html5xhtml'),
(30, 'Абзацы HTML', 'Понятие абзацев в HTML соответствует понятиям абзацев в обычных текстах. Абзац – это некий блок текста, написанный с новой строки. Для разметки абзаца на странице HTML существует тег [less]p[more]. Имеется закрывающий тег, как у всех блочных контейнеров. Текст, помещенный между открывающимся [less]p[more]  и закрывающимся [less]/p[more]  тегами p и будет помещен в абзац.<br>\r\n<code>   <br>\r\n<p>  <br>\r\nНекий текст.<br>\r\n</p>  <br>\r\n</code><br>\r\nТеги не обязаны располагаться в отдельных строках и могут быть размещены внутри текста. Важно лишь соответствие числа закрывающих тегов числу открывающих.<br>\r\nВ ролике ниже форматируется текст с помощью тегов [less]p[more]  [less]/p[more]  <br>\r\n<br>\r\n<br>\r\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/cJeSmJDUhA8\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe><br>\r\n#html3html5xhtml#', 'alfa54', 'html3html5xhtml'),
(31, 'Полужирный текст и курсив. Теги B и I.', 'В статье рассматриваются два тега [less]b[more] и [less]i[more].<br>\r\nТег [less]b[more] делает текст внутри себя полужирным. Использовать очень просто. Нужный участок текста просто заключаем в теги [less]b[more] .<br>\r\n<br>\r\nПример:<br>\r\n<code>     <br>\r\n[less]b[more]Полужирный текст.[less]/b[more]<br>\r\n<b>    Полужирный текст.</b><br>\r\n</code><br>\r\n<br>\r\nВторой тег [less]i[more] делает курсив. Аналогичное использование. Необходимый участок текста заключаем в тег [less]i[more].<br>\r\n<br>\r\nПример:<br>\r\n<code>     <br>\r\n[less]i[more]Текс курсив.[less]/i[more]<br>\r\n<i>Текс курсив.</i><br>\r\n</code><br>\r\n<br>\r\nНиже в ролике показано использование данных тегов.<br>\r\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/yQaSSpuFHqI\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe><br>\r\n#html3html5xhtml#', 'alfa54', 'html3html5xhtml'),
(32, 'Надстрочные и подстрочные символы.', 'Два тега, необходимые для реализации надстрочных или подстрочных символов sup и sub.<br>\r\n<br>\r\nВ ситуациях, когда необходимо воспроизвести надстрочный символ, к примеру возведение числа в степень, E=mc<sup> 2</sup> , используется тег &lt;sup&gt;. Применение очень простое, необходимую часть заключаем между открытым и закрытым тегом. <br>\r\n<br>\r\nПример:<br>\r\nE=mc&lt;sup&gt;2&lt;/sup&gt;<br>\r\n<br>\r\nАналогичная ситуация с подстрочным текстом. Если нужен текст подстрочный, к примеру, для описания формулы спирта C&ltsub&gt2&lt/sub&gtH&ltsub&gt5&lt/sub&gtOH заключаем нужный текст в тег sub.<br>\r\n<br>\r\nПример:<br>\r\nC&lt;sub&gt;2&lt;/sub&gt;H&lt;sub&gt;5&lt;/sub&gt;OH<br>\r\n<br>\r\nЕсли остались вопросы, можно просмотреть видеоролик внизу.<br>\r\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/XD5Ys74PWd8\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>', 'alfa54', '-'),
(33, 'Надстрочные и подстрочные символы.', 'Два тега, необходимые для реализации надстрочных или подстрочных символов [less]sup[more] и [less]sub[more].<br>\r\n<br>\r\nВ ситуациях, когда необходимо воспроизвести надстрочный символ, к примеру возведение числа в степень, E=mc<sup>            2</sup> , используется тег [less]sup[more]  . Применение очень простое, необходимую часть заключаем между открытым и закрытым тегом. <br>\r\n<br>\r\nПример:<br>\r\n<code>            <br>\r\nE=mc[less]sup[more]2[less]/sup[more]<br>\r\n</code><br>\r\n<br>\r\nАналогичная ситуация с подстрочным текстом. Если нужен текст подстрочный, к примеру, для описания формулы спирта C<sub>    2</sub>H<sub>   5</sub>OH заключаем нужный текст в тег [less]sub[more].<br>\r\n<br>\r\nПример:<br>\r\n<code>            <br>\r\nC[less]sub[more]2[less]/sub[more]H[less]sub[more]5[less]/sub[more]OH<br>\r\n</code><br>\r\n<br>\r\nЕсли остались вопросы, можно просмотреть видеоролик внизу.<br>\r\n<br>\r\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/XD5Ys74PWd8\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe><br>\r\n<br>\r\n#html3html5xhtml#<br>\r\n', 'alfa54', 'html3html5xhtml'),
(35, 'Сворачивание пробелов в HTML', 'В документах HTML или на страничках HTML существует такое понятие, как сворачивание пробелов. Понятие довольно простое, но иногда способное доставить неудобства.<br>\r\n<br>\r\nСуть заключается в том, что браузеры встретив несколько пробелов превращают их в один пробел. Это не всегда удобно для форматирования текста. То же самое происходит и с пустыми строками, если их есть несколько, то произойдёт переход на следующую строку только один раз. В случае с пустыми строками не появляется одной пустой строки потому, что браузер встретив несколько служебных символов перехода на следующую строку воспроизводит только один из них, как и в случае с пробелами, однако символ перехода на новую строку не делает пустой строки. Исключением является последняя пустая строка в тексте, если будет символ перехода в конце, то, разумеется, останется последняя пустая строка.<br>\r\n<br>\r\nБороться с этим весьма просто. В случае с пустыми строками, если они нужны, ставят тег [less]br[more] столько раз, сколько нужно воспроизвести переходов на новую строку, не путать с пустыми строками. Чтобы внутри текста сделать пустую строку, необходимо поставить два тега [less]br[more][less]br[more].<br>\r\n[IMG]zlesnpybsv.jpg[IMG]<br>\r\nКогда речь идёт о дополнительных пробелах, то для реализации или решения этой задачи служит комбинация:<br>\r\n<br>\r\n<br>\r\nКак это работает можно посмотреть в коротком видеоролике ниже.<br>\r\n<br>\r\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/ypzgOBrVzwI\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe><br>\r\n#html3html5xhtml#', 'alfa54', 'html3html5xhtml'),
(36, 'Теги strong и em.', 'Короткая статья касательно двух тегов.<br>\r\n<br>\r\nStrong.<br>\r\nДанный тег предназначен для ситуации, когда в тексте необходимо сделать предупреждение. Визуально текст, в тегах [less]strong[more]Предупреждение!!![less]/strong[more] отображается полужирным или жирным стилем, однако данный тег не следует применять именно для визуализации текста. Вероятнее всего текст в тегах [less]strong[more] используют автоматические системы воспроизведения текста.<br>\r\n<br>\r\nПример: <br>\r\n<strong>    Предупреждение!!!</strong><br>\r\n<br>\r\nEm.<br>\r\nТег [less]em[more] Этот текст важнее остального текста в статье.[less]/em[more] используется для акцентирования внимания на часть текста. Визуально он воспроизводится курсивом, текс в данных тегах, но теги исключительно для акцентирования внимания.<br>\r\n<br>\r\nПример: <br>\r\n<em>     Этот текст важнее остального текста в статье.</em><br>\r\n<br>\r\nНиже представлено видео, касательно использования данных тегов.<br>\r\n<br>\r\n<br>\r\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/2SwTQkAO1uc\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe><br>\r\n#html3html5xhtml#<br>\r\n', 'alfa54', 'html3html5xhtml'),
(37, 'Цитаты blockqwote и q', 'Теги [less]blockquote[more] и [less]q[more] предназначены для выделения цитат в тексте. Как видно из названия тегов, [less]blockquote[more] является блочным тегом, или цитирует блок с созданием своего параграфа или блока с текстом. Тег же [less]q[more] предназначен для обрамления цитат внутри текста без создания своих блоков.<br>\r\n<br>\r\nНесмотря на то, что тег [less]blockquote[more] является блочным, то есть создает свой параграф или блок, его всё равно рекомендуют использовать вместе с тегом параграфа [less]p[more], то есть [less]blockquote[more][less]p[more]Цитата[less]/p[more][less]/blockquote[more].<br>\r\n<br>\r\nПример:<br>\r\n<code>     <br>\r\n[less]blockquote[more]<br>\r\n[less]p[more]<br>\r\nЦитата<br>\r\n[less]/p[more]<br>\r\n[less]/blockquote[more].<br>\r\n</code><br>\r\n<br>\r\nЕсли речь про тег [less]q[more], то его можно использовать непосредственно в тексте.<br>\r\n<br>\r\nПример:<br>\r\n<code>     <br>\r\nОсновная часть текста, в котором есть [less]q[more]небольшой цитируемый участок[less]/q[more].<br>\r\n</code><br>\r\nЕсть у данных тегов свое собственное свойство, которое позволяет задать источник цитаты текста, ссылку на сайт. Браузер данную ссылку никак не воспроизводит, однако её значение видят скрипты.<br>\r\n<br>\r\nПример:<br>\r\n<code>     <br>\r\nОсновная часть текста, в котором есть [less]q site=”google.com”[more]небольшой цитируемый участок[less]/q[more].<br>\r\n</code><br>\r\n<br>\r\nКак работают данные теги показано в ролике внизу.<br>\r\n<br>\r\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/cnycVhAOOho\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe><br>\r\n#html3html5xhtml#', 'alfa54', 'html3html5xhtml');

-- --------------------------------------------------------

--
-- Структура таблицы `blocked_list_dobavit_mat`
--

CREATE TABLE `blocked_list_dobavit_mat` (
  `id` int(11) DEFAULT NULL,
  `login` varchar(50) COLLATE utf8_bin DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin;

--
-- Дамп данных таблицы `blocked_list_dobavit_mat`
--

INSERT INTO `blocked_list_dobavit_mat` (`id`, `login`) VALUES
(2, 'Starki'),
(3, 'Stark'),
(37, 'alex25'),
(38, 'Nyna'),
(2, 'Starki'),
(3, 'Stark'),
(4, 'alex25'),
(5, 'alex25'),
(39, 'alfa54'),
(40, 'alfa54'),
(41, 'alfa54'),
(42, 'alfa54'),
(43, 'alfa54'),
(44, 'test123');

-- --------------------------------------------------------

--
-- Структура таблицы `dla_statusob_123`
--

CREATE TABLE `dla_statusob_123` (
  `ID` int(11) DEFAULT NULL,
  `NAME` varchar(255) COLLATE utf8_bin DEFAULT NULL,
  `URL` varchar(255) COLLATE utf8_bin DEFAULT NULL,
  `CLASS` varchar(255) COLLATE utf8_bin DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin;

--
-- Дамп данных таблицы `dla_statusob_123`
--

INSERT INTO `dla_statusob_123` (`ID`, `NAME`, `URL`, `CLASS`) VALUES
(0, 'На Сайт', 'dfdx.php', 'dla_statusob_123');

-- --------------------------------------------------------

--
-- Структура таблицы `load_img`
--

CREATE TABLE `load_img` (
  `id` int(11) DEFAULT NULL,
  `name` varchar(50) COLLATE utf8_bin DEFAULT NULL,
  `url` varchar(500) COLLATE utf8_bin DEFAULT NULL,
  `alt` varchar(100) COLLATE utf8_bin DEFAULT NULL,
  `width` int(11) DEFAULT NULL,
  `height` int(11) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin;

--
-- Дамп данных таблицы `load_img`
--

INSERT INTO `load_img` (`id`, `name`, `url`, `alt`, `width`, `height`) VALUES
(-1, ' ', 'url', ' ', -1, -1),
(0, 'wbzbsyenxu.jpg', 'https://ing-support.ru/wp-content/uploads/barter.jpg', 'preg_replace()', 500, 333),
(1, 'ensxtgkivn.jpg', 'http://kordon.org.ua/wp-content/uploads/2017/09/f82ab0ad5b3515efbbb8575d7c4b3fd3.jpg', 'preg_replace()', 690, 480),
(2, 'vlhyaqogcc.png', 'https://i.ibb.co/hHYQTfP/2022-01-18-221304.png', 'CMD-DFDX', 180, 180),
(3, 'qzovofbudx.gif', 'https://i.ibb.co/yp4s93P/2022-01-18-221304.gif', 'CMD-DFDX', 550, 311),
(4, 'smmbwsddmv.gif', 'https://i.ibb.co/bz110M0/2022-01-18-223601.gif', 'CMD-DFDX', 550, 309),
(5, 'ctnjxbahzz.gif', 'http://sleza-mobile.ru/data/loads/any/abstrakcii_(139).gif', 'CMD-DFDX', 240, 320),
(6, 'jezfxmjoof.jpg', 'https://ktonanovenkogo.ru/image/priroda-gora.jpg', 'CMD-DFDX', 500, 307),
(7, 'zlesnpybsv.jpg', 'https://i.ibb.co/Vx6Bnp4/2022-02-06-181524.jpg', 'CMD-DFDX', 278, 130);

-- --------------------------------------------------------

--
-- Структура таблицы `login`
--

CREATE TABLE `login` (
  `ID` int(11) DEFAULT NULL,
  `NAME` varchar(255) COLLATE utf8_bin DEFAULT NULL,
  `URL` varchar(255) COLLATE utf8_bin DEFAULT NULL,
  `CLASS` varchar(255) COLLATE utf8_bin DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin;

--
-- Дамп данных таблицы `login`
--

INSERT INTO `login` (`ID`, `NAME`, `URL`, `CLASS`) VALUES
(0, 'login_status', 'text2', 'login_dfdx'),
(1, 'parol_status', 'text2', 'login_dfdx'),
(2, 'Вход', 'redaktor.php', 'login_dfdx'),
(3, 'Регистрация', 'redaktor.php', 'login_dfdx'),
(4, 'На сайт', 'dfdx.php', 'login_dfdx');

-- --------------------------------------------------------

--
-- Структура таблицы `maty`
--

CREATE TABLE `maty` (
  `mat` varchar(15) COLLATE utf8_bin DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin;

--
-- Дамп данных таблицы `maty`
--

INSERT INTO `maty` (`mat`) VALUES
('гавно'),
('пизда'),
('чувак'),
('говно'),
('хуй'),
('хуя'),
('хую'),
('fuck'),
('хуйня'),
('нахуй'),
('похуй'),
('захуй'),
('хуёвый'),
('лох'),
('гнида'),
('заебись'),
('блять'),
('пиздабол'),
('жопа'),
('жопу'),
('залупа'),
('сучька'),
('сучка'),
('гавно'),
('пизда'),
('чувак'),
('говно'),
('хуй'),
('хуя'),
('хую'),
('fuck'),
('хуйня'),
('нахуй'),
('похуй'),
('захуй'),
('хуёвый'),
('лох'),
('гнида'),
('заебись'),
('блять'),
('пиздабол');

-- --------------------------------------------------------

--
-- Структура таблицы `mat_ot_polzovatelej`
--

CREATE TABLE `mat_ot_polzovatelej` (
  `mat` varchar(15) COLLATE utf8_bin DEFAULT NULL,
  `login` varchar(15) COLLATE utf8_bin DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin;

--
-- Дамп данных таблицы `mat_ot_polzovatelej`
--

INSERT INTO `mat_ot_polzovatelej` (`mat`, `login`) VALUES
('Кракозябра', 'GREYFOX'),
('жоппа', 'Indi');

-- --------------------------------------------------------

--
-- Структура таблицы `menu_maty`
--

CREATE TABLE `menu_maty` (
  `ID` int(11) DEFAULT NULL,
  `NAME` varchar(255) COLLATE utf8_bin DEFAULT NULL,
  `URL` varchar(255) COLLATE utf8_bin DEFAULT NULL,
  `CLASS` varchar(255) COLLATE utf8_bin DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin;

--
-- Дамп данных таблицы `menu_maty`
--

INSERT INTO `menu_maty` (`ID`, `NAME`, `URL`, `CLASS`) VALUES
(0, 'mat_text', 'text', 'menu_maty'),
(1, 'Показать', 'redaktor.php', 'menu_maty'),
(2, 'Добавить', 'redaktor.php', 'menu_maty'),
(3, 'Удалить мат', 'redaktor.php', 'menu_maty_kill_mat'),
(4, 'Проверить слово', 'redaktor.php', 'menu_maty_prowerit_slowo'),
(5, 'Показать не маты', 'redaktor.php', 'menu_nematy_pokaz'),
(6, 'Добавить не мат', 'redaktor.php', 'menu_maty_dobavit'),
(7, 'Удалить не мат', 'redaktor.php', 'menu_maty_kill'),
(8, 'От пользователей', 'redaktor.php', 'menu_maty_ot_polzovatel');

-- --------------------------------------------------------

--
-- Структура таблицы `menu_parametr_tab`
--

CREATE TABLE `menu_parametr_tab` (
  `ID` int(11) DEFAULT NULL,
  `NAME` varchar(255) COLLATE utf8_bin DEFAULT NULL,
  `URL` varchar(255) COLLATE utf8_bin DEFAULT NULL,
  `CLASS` varchar(255) COLLATE utf8_bin DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin;

--
-- Дамп данных таблицы `menu_parametr_tab`
--

INSERT INTO `menu_parametr_tab` (`ID`, `NAME`, `URL`, `CLASS`) VALUES
(0, 'stolbcov', 'text', 'menu_parametr_tab'),
(1, 'strok', 'text', 'menu_parametr_tab'),
(2, 'Ок', 'redaktor.php', 'menu_parametr_tab'),
(3, 'Отмена', 'redaktor.php', 'menu_parametr_tab');

-- --------------------------------------------------------

--
-- Структура таблицы `menu_up_dfdx`
--

CREATE TABLE `menu_up_dfdx` (
  `ID` int(11) DEFAULT NULL,
  `NAME` varchar(255) COLLATE utf8_bin DEFAULT NULL,
  `URL` varchar(255) COLLATE utf8_bin DEFAULT NULL,
  `CLASS` varchar(255) COLLATE utf8_bin DEFAULT NULL,
  `STATUS` varchar(255) COLLATE utf8_bin DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin;

--
-- Дамп данных таблицы `menu_up_dfdx`
--

INSERT INTO `menu_up_dfdx` (`ID`, `NAME`, `URL`, `CLASS`, `STATUS`) VALUES
(1, 'Регистрация', 'redaktor.php', 'menu_up_dfdx btn', '-0'),
(4, 'Вход', 'default', 'menu_up_dfdx btn', '-0'),
(5, 'Выход', 'default', 'menu_up_dfdx btn', '-123459'),
(6, 'Настройки', 'redaktor.php', 'menu_up_dfdx btn', '-45'),
(2, 'login', 'text2', 'menu_up_dfdx', '-0'),
(3, 'parol', 'text2P', 'menu_up_dfdx', '-0'),
(0, 'Главная', 'default', 'menu_up_dfdx btn', '-0123459'),
(7, 'Закончить регистрацию', 'redaktor.php', 'menu_up_dfdx btn', '-9');

-- --------------------------------------------------------

--
-- Структура таблицы `monety_dfdx`
--

CREATE TABLE `monety_dfdx` (
  `login` varchar(50) COLLATE utf8_bin DEFAULT NULL,
  `monet` int(11) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin;

--
-- Дамп данных таблицы `monety_dfdx`
--

INSERT INTO `monety_dfdx` (`login`, `monet`) VALUES
('login', 0),
('alfa54', 157433),
('test123', 0),
('test124', 0),
('admin', 0),
('stark', 0),
('Nyna', 10);

-- --------------------------------------------------------

--
-- Структура таблицы `nastrolkiredaktora`
--

CREATE TABLE `nastrolkiredaktora` (
  `imiePosTabl` varchar(50) COLLATE utf8_bin NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin;

--
-- Дамп данных таблицы `nastrolkiredaktora`
--

INSERT INTO `nastrolkiredaktora` (`imiePosTabl`) VALUES
('menu_parametr_tab');

-- --------------------------------------------------------

--
-- Структура таблицы `nie_maty`
--

CREATE TABLE `nie_maty` (
  `nie_mat` varchar(15) COLLATE utf8_bin DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin;

--
-- Дамп данных таблицы `nie_maty`
--

INSERT INTO `nie_maty` (`nie_mat`) VALUES
('подстрахуй'),
('страхуй'),
('застрахуй');

-- --------------------------------------------------------

--
-- Структура таблицы `podtverdit`
--

CREATE TABLE `podtverdit` (
  `ID` int(11) DEFAULT NULL,
  `NAME` varchar(255) COLLATE utf8_bin DEFAULT NULL,
  `URL` varchar(255) COLLATE utf8_bin DEFAULT NULL,
  `CLASS` varchar(255) COLLATE utf8_bin DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin;

--
-- Дамп данных таблицы `podtverdit`
--

INSERT INTO `podtverdit` (`ID`, `NAME`, `URL`, `CLASS`) VALUES
(0, 'kod', 'text2', 'podtverdit btn btn-info'),
(1, 'Подтвердить запись', 'redaktor.php', 'podtverdit btn btn-info'),
(2, 'Найти письмо', 'redaktor.php', 'podtverdit btn btn-info'),
(3, 'Выйти', 'redaktor.php', 'podtverdit btn btn-info'),
(4, 'На сайт', 'dfdx.php', 'podtverdit btn btn-info');

-- --------------------------------------------------------

--
-- Структура таблицы `redaktor_down`
--

CREATE TABLE `redaktor_down` (
  `ID` int(11) DEFAULT NULL,
  `NAME` varchar(255) COLLATE utf8_bin DEFAULT NULL,
  `URL` varchar(255) COLLATE utf8_bin DEFAULT NULL,
  `CLASS` varchar(255) COLLATE utf8_bin DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin;

--
-- Дамп данных таблицы `redaktor_down`
--

INSERT INTO `redaktor_down` (`ID`, `NAME`, `URL`, `CLASS`) VALUES
(0, 'Обновить дату изменения сайта', 'redaktor.php', 'redaktor_down'),
(1, 'Обновить дату изменения базы данных', 'redaktor.php', 'redaktor_down'),
(2, 'Настроить редактор', 'redaktor.php', 'redaktor_down');

-- --------------------------------------------------------

--
-- Структура таблицы `redaktor_nastr7`
--

CREATE TABLE `redaktor_nastr7` (
  `ID` int(11) DEFAULT NULL,
  `NAME` varchar(255) COLLATE utf8_bin DEFAULT NULL,
  `URL` varchar(255) COLLATE utf8_bin DEFAULT NULL,
  `CLASS` varchar(255) COLLATE utf8_bin DEFAULT NULL,
  `STATUS` varchar(255) COLLATE utf8_bin DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin;

--
-- Дамп данных таблицы `redaktor_nastr7`
--

INSERT INTO `redaktor_nastr7` (`ID`, `NAME`, `URL`, `CLASS`, `STATUS`) VALUES
(0, 'text_redaktor_nastr', 'text', 'redaktor_nastr_text', '-45'),
(1, 'Загрузить', 'redaktor.php', 'redaktor_nastr_zagruzit', '-45'),
(2, 'Создать таблицу', 'redaktor.php', 'redaktor_nastr_soz_tab', '-5'),
(3, 'Меню 3-4', 'redaktor.php', 'redaktor_nastr_soz_menu', '-5'),
(4, 'Список таблиц', 'redaktor.php', 'redaktor_nastr_spis_tab', '-45'),
(5, 'Удалить', 'redaktor.php', 'redaktor_nastr_udalit', '-5'),
(6, 'Меню 5-9', 'redaktor.php', 'redaktor_nastr_menu_5', '-5'),
(7, 'Статус', 'redaktor.php', 'redaktor_nastr_status', '-54'),
(8, 'Маты', 'redaktor.php', 'redaktor_nastr7_maty', '-54'),
(9, 'Статистика', 'redaktor.php', 'redaktor_nastr_statistik', '-45');

-- --------------------------------------------------------

--
-- Структура таблицы `redaktor_up`
--

CREATE TABLE `redaktor_up` (
  `ID` int(11) DEFAULT NULL,
  `NAME` varchar(255) COLLATE utf8_bin DEFAULT NULL,
  `URL` varchar(255) COLLATE utf8_bin DEFAULT NULL,
  `CLASS` varchar(255) COLLATE utf8_bin DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin;

--
-- Дамп данных таблицы `redaktor_up`
--

INSERT INTO `redaktor_up` (`ID`, `NAME`, `URL`, `CLASS`) VALUES
(0, 'Редактор', 'redaktor.php', 'redaktor_up'),
(1, 'Сайт', 'dfdx.php', 'redaktor_up'),
(2, 'Выйти', 'redaktor.php', 'redaktor_up'),
(3, 'Создать страницу', 'rd_nova_str.php', 'redaktor_up_1'),
(4, 'Подсветить меню', 'default', 'redaktor_up_1');

-- --------------------------------------------------------

--
-- Структура таблицы `redakt_profil`
--

CREATE TABLE `redakt_profil` (
  `id_tab_gl` int(11) DEFAULT NULL,
  `poz1` varchar(255) COLLATE utf8_bin DEFAULT NULL,
  `poz2` varchar(255) COLLATE utf8_bin DEFAULT NULL,
  `poz3` varchar(255) COLLATE utf8_bin DEFAULT NULL,
  `poz4` varchar(255) COLLATE utf8_bin DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin;

--
-- Дамп данных таблицы `redakt_profil`
--

INSERT INTO `redakt_profil` (`id_tab_gl`, `poz1`, `poz2`, `poz3`, `poz4`) VALUES
(1, 'img', 'text', 'checkbox', 'NULL'),
(2, 'p', 'text', 'checkbox', 'NULL'),
(3, 'p', 'text', 'checkbox', 'NULL'),
(4, 'textarea', 'p', 'checkbox', 'NULL'),
(5, 'p', 'text', 'checkbox', 'NULL'),
(6, 'p', 'text', 'checkbox', 'NULL'),
(7, 'p', 'text', 'checkbox', 'NULL'),
(8, 'p', 'text', 'checkbox', 'NULL'),
(9, 'p', 'text', 'checkbox', 'NULL'),
(10, 'p', 'text', 'checkbox', 'NULL'),
(11, 'NULL', 'NULL', 'NULL', 'NULL'),
(12, 'NULL', 'NULL', 'NULL', 'NULL'),
(13, 'NULL', 'NULL', 'NULL', 'NULL'),
(14, 'p', 'text', 'checkbox', 'NULL'),
(15, 'p', 'text', 'checkbox', 'NULL'),
(16, 'NULL', 'NULL', 'NULL', 'NULL'),
(17, 'NULL', 'NULL', 'NULL', 'NULL'),
(18, 'NULL', 'NULL', 'NULL', 'NULL'),
(19, 'NULL', 'NULL', 'NULL', 'NULL'),
(20, 'checkbox', 'NULL', 'NULL', 'button');

-- --------------------------------------------------------

--
-- Структура таблицы `redakt_profil_data`
--

CREATE TABLE `redakt_profil_data` (
  `id` int(11) DEFAULT NULL,
  `str` int(11) DEFAULT NULL,
  `stolb` int(11) DEFAULT NULL,
  `info` varchar(6000) COLLATE utf8_bin DEFAULT NULL,
  `login` varchar(100) COLLATE utf8_bin DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin;

--
-- Дамп данных таблицы `redakt_profil_data`
--

INSERT INTO `redakt_profil_data` (`id`, `str`, `stolb`, `info`, `login`) VALUES
(132, 3, 1, '', 'alfa54'),
(137, 6, 1, '', 'alfa54'),
(139, 7, 1, '', 'alfa54'),
(141, 8, 1, '', 'alfa54'),
(143, 9, 1, '', 'alfa54'),
(145, 10, 1, '', 'alfa54'),
(147, 11, 1, '', 'alfa54'),
(148, 11, 2, '', 'alfa54'),
(149, 12, 1, '', 'alfa54'),
(150, 12, 2, '', 'alfa54'),
(151, 13, 1, '', 'alfa54'),
(152, 13, 2, '', 'alfa54'),
(153, 14, 1, '', 'alfa54'),
(378, 5, 1, 'Мой сайт', 'alfa54'),
(499, 1, 2, 'Введите адрес изображения', 'Модератор'),
(500, 1, 3, '-', 'Модератор'),
(501, 2, 2, 'Введите имя', 'Модератор'),
(502, 2, 3, '-', 'Модератор'),
(503, 3, 2, 'Введите фамилию', 'Модератор'),
(504, 3, 3, '-', 'Модератор'),
(505, 4, 1, 'Немного о себе', 'Модератор'),
(506, 4, 3, '-', 'Модератор'),
(507, 5, 2, 'ссылка на сайт', 'Модератор'),
(508, 5, 3, '-', 'Модератор'),
(509, 6, 2, 'Моя почта', 'Модератор'),
(510, 6, 3, '-', 'Модератор'),
(511, 7, 2, 'Мой Skype', 'Модератор'),
(512, 7, 3, '-', 'Модератор'),
(513, 8, 2, 'Мой WhatsApp', 'Модератор'),
(514, 8, 3, '-', 'Модератор'),
(515, 9, 2, 'моя тоже блин телега', 'Модератор'),
(516, 9, 3, '-s1s2s3s4s5s9', 'Модератор'),
(517, 10, 3, '-', 'Модератор'),
(518, 11, 3, '-', 'Модератор'),
(519, 12, 3, '-', 'Модератор'),
(520, 13, 3, '-', 'Модератор'),
(521, 14, 3, '-', 'Модератор'),
(522, 20, 1, '-', 'Модератор'),
(575, 1, 2, 'https://cspromogame.ru//storage/upload_images/avatars/3958.jpg', 'alfa54'),
(576, 1, 3, '-s1s2s3s4s5s9', 'alfa54'),
(577, 2, 2, 'Александр', 'alfa54'),
(578, 2, 3, '-s1s2s3s4s5s9', 'alfa54'),
(579, 3, 2, 'Ищук', 'alfa54'),
(580, 3, 3, '-s1s2s3s4s5s9', 'alfa54'),
(581, 4, 1, 'Кто тут главный? Я тут главный.', 'alfa54'),
(582, 4, 3, '-s1s2s3s4s5s9', 'alfa54'),
(583, 5, 2, 'http://google.com', 'alfa54'),
(584, 5, 3, '-s1s2s3s4s5s9', 'alfa54'),
(585, 6, 2, 'alexmway@mail.ru', 'alfa54'),
(586, 6, 3, '-s1s2s3s4s5s9', 'alfa54'),
(587, 7, 2, 'Лидер 25', 'alfa54'),
(588, 7, 3, '-s1s2s3s4s5s9', 'alfa54'),
(589, 8, 2, 'Что ап?', 'alfa54'),
(590, 8, 3, '-s1s2s3s4s5s9', 'alfa54'),
(591, 9, 2, 'моя телега', 'alfa54'),
(592, 9, 3, '-s1s2s3s4s5s9', 'alfa54'),
(593, 10, 2, 'а фигушки', 'alfa54'),
(594, 10, 3, '-s1s2s3s4s5s9', 'alfa54'),
(595, 11, 3, '-s1s2s3s4s5s9', 'alfa54'),
(596, 12, 3, '-s1s2s3s4s5s9', 'alfa54'),
(597, 13, 3, '-s1s2s3s4s5s9', 'alfa54'),
(598, 14, 2, 'ага ага', 'alfa54'),
(599, 14, 3, '-s1s2s3s4s5s9', 'alfa54'),
(600, 15, 2, 'неа', 'alfa54'),
(601, 15, 3, '-s1s2s3s4s5s9', 'alfa54'),
(602, 20, 1, '-', 'alfa54'),
(603, 1, 2, 'https://cspromogame.ru//storage/upload_images/avatars/838.jpg', 'Starki'),
(604, 1, 3, '-s1s2s3s4s5s9', 'Starki'),
(605, 2, 2, 'Имя', 'Starki'),
(606, 2, 3, '-s1s2s3s4s5s9', 'Starki'),
(607, 3, 2, 'Введите фамилию', 'Starki'),
(608, 3, 3, '-', 'Starki'),
(609, 4, 1, 'Немного о себе', 'Starki'),
(610, 4, 3, '-', 'Starki'),
(611, 5, 2, 'ссылка на сайт', 'Starki'),
(612, 5, 3, '-', 'Starki'),
(613, 6, 2, 'Моя почта', 'Starki'),
(614, 6, 3, '-', 'Starki'),
(615, 7, 2, 'Мой Skype', 'Starki'),
(616, 7, 3, '-', 'Starki'),
(617, 8, 2, 'Мой WhatsApp', 'Starki'),
(618, 8, 3, '-', 'Starki'),
(619, 9, 2, 'Мой Telegram', 'Starki'),
(620, 9, 3, '-', 'Starki'),
(621, 10, 2, 'Мой Viber', 'Starki'),
(622, 10, 3, '-', 'Starki'),
(623, 14, 2, 'Мой Youtube', 'Starki'),
(624, 14, 3, '-', 'Starki'),
(625, 15, 2, 'Мой facebook', 'Starki'),
(626, 15, 3, '-', 'Starki'),
(627, 20, 1, '-', 'Starki');

-- --------------------------------------------------------

--
-- Структура таблицы `redakt_profil_status`
--

CREATE TABLE `redakt_profil_status` (
  `stolb` int(11) DEFAULT NULL,
  `str` int(11) DEFAULT NULL,
  `status` varchar(255) COLLATE utf8_bin DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin;

--
-- Дамп данных таблицы `redakt_profil_status`
--

INSERT INTO `redakt_profil_status` (`stolb`, `str`, `status`) VALUES
(4, 20, '-s1s2s3s4s5s9'),
(4, 1, '-s1s2s3s4s5s9'),
(3, 1, '-s1s2s3s4s5s9'),
(3, 2, '-s1s2s3s4s5s9'),
(2, 1, '-s1s2s3s4s5s9'),
(4, 2, '-'),
(0, 0, '-s1s2s3s4s5s9'),
(2, 2, '-s1s2s3s4s5s9'),
(1, 2, '-s1s2s3s4s5s9'),
(1, 3, '-s1s2s3s4s5s9'),
(2, 3, '-s1s2s3s4s5s9'),
(3, 3, '-s1s2s3s4s5s9'),
(3, 4, '-s1s2s3s4s5s9'),
(3, 5, '-s1s2s3s4s5s9'),
(3, 6, '-s1s2s3s4s5s9'),
(3, 7, '-s1s2s3s4s5s9'),
(3, 8, '-s1s2s3s4s5s9'),
(3, 9, '-s1s2s3s4s5s9'),
(3, 10, '-s1s2s3s4s5s9'),
(3, 14, '-s1s2s3s4s5s9'),
(1, 4, '-s1s2s3s4s5s9'),
(2, 4, '-s1s2s3s4s5s9'),
(2, 5, '-s1s2s3s4s5s9'),
(1, 5, '-s1s2s3s4s5s9'),
(1, 6, '-s1s2s3s4s5s9'),
(2, 6, '-s1s2s3s4s5s9'),
(1, 7, '-s1s2s3s4s5s9'),
(2, 7, '-s1s2s3s4s5s9'),
(1, 8, '-s1s2s3s4s5s9'),
(1, 9, '-s1s2s3s4s5s9'),
(2, 9, '-s1s2s3s4s5s9'),
(2, 8, '-s1s2s3s4s5s9'),
(1, 10, '-s1s2s3s4s5s9'),
(2, 10, '-s1s2s3s4s5s9'),
(1, 15, '-s1s2s3s4s5s9'),
(2, 15, '-s1s2s3s4s5s9'),
(2, 14, '-s1s2s3s4s5s9'),
(3, 15, '-s1s2s3s4s5s9'),
(1, 13, '-'),
(2, 13, '-'),
(3, 13, '-s1s2s3s4s5s9'),
(2, 12, '-'),
(3, 12, '-s1s2s3s4s5s9'),
(1, 11, '-'),
(2, 11, '-'),
(3, 11, '-s1s2s3s4s5s9'),
(1, 14, '-s1s2s3s4s5s9'),
(1, 12, '-s1s2s3s4s5s9'),
(1, 1, '-s1s2s3s4s5s9');

-- --------------------------------------------------------

--
-- Структура таблицы `redakt_profil_tegi`
--

CREATE TABLE `redakt_profil_tegi` (
  `stolb` int(11) DEFAULT NULL,
  `str` int(11) DEFAULT NULL,
  `name_teg` varchar(255) COLLATE utf8_bin DEFAULT NULL,
  `name_attrib` varchar(255) COLLATE utf8_bin DEFAULT NULL,
  `text` varchar(6000) COLLATE utf8_bin DEFAULT NULL,
  `string_ili_int` int(11) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin;

--
-- Дамп данных таблицы `redakt_profil_tegi`
--

INSERT INTO `redakt_profil_tegi` (`stolb`, `str`, `name_teg`, `name_attrib`, `text`, `string_ili_int`) VALUES
(0, 0, 'form', 'action', 'starki.php', 0),
(0, 0, 'form', 'method', 'POST', 0),
(2, 1, 'text', 'name', 'adresFoto', 0),
(2, 1, 'text', 'value', 'Введите адрес изображения', 0),
(1, 1, 'img', 'src', 'image/anonim.jpg', 0),
(4, 20, 'button', 'name', 'submit_redakt_profil', 0),
(4, 20, 'button', 'class', 'submit_redakt_profil', 0),
(4, 20, 'button', 'текст на кнопке', 'Отправить', 0),
(2, 1, 'text', 'size', '35', 0),
(4, 20, 'button', 'value', 'Отправить', 0),
(1, 1, 'img', 'class', 'imgProfil urlurlFoto', 0),
(3, 1, 'checkbox', 'текст на кнопке', 'привет', 0),
(3, 1, 'checkbox', 'Текст 1', 'Гость', 0),
(3, 1, 'checkbox', 'Текст 2', 'Пользователь', 0),
(3, 1, 'checkbox', 'Текст 3', 'Редактор', 0),
(3, 1, 'checkbox', 'Текст 4', 'Подписчик', 0),
(3, 1, 'checkbox', 'Текст 5', 'Модератор', 0),
(3, 1, 'checkbox', 'checked', '', 0),
(3, 1, 'checkbox', 'id', 'statusStr1Stolb3', 0),
(3, 1, 'checkbox', 'for', 'statusStr1Stolb3', 0),
(3, 1, 'checkbox', 'name', 'N_statusStr1Stolb3', 0),
(3, 1, 'checkbox', 'value', 'V_statusStr1Stolb3', 0),
(3, 1, 'checkbox', 'Текст 6', 'Админ', 0),
(3, 1, 'checkbox', 'class', 'statusProf', 0),
(3, 1, 'checkbox', 'class для label', 'statusProfPunkt', 0),
(3, 1, 'checkbox', 'Текст 7', 'Не подтвердил', 0),
(3, 1, 'checkbox', 'блок', '<input type=\"checkbox\" checked id=\"statusStr1Stolb3_1\" name=\"N_statusStr1Stolb3_1\" value=\"V_statusStr1Stolb3_1\" class=\"statusProf\"><br><label class=\"statusProfPunkt\" for=\"statusStr1Stolb3_1\">Гость</label><br><input type=\"checkbox\" checked id=\"statusStr1Stolb3_2\" name=\"N_statusStr1Stolb3_2\" value=\"V_statusStr1Stolb3_2\" class=\"statusProf\"><br><label class=\"statusProfPunkt\" for=\"statusStr1Stolb3_2\">Пользователь</label><br><input type=\"checkbox\" checked id=\"statusStr1Stolb3_3\" name=\"N_statusStr1Stolb3_3\" value=\"V_statusStr1Stolb3_3\" class=\"statusProf\"><br><label class=\"statusProfPunkt\" for=\"statusStr1Stolb3_3\">Редактор</label><br><input type=\"checkbox\" checked id=\"statusStr1Stolb3_4\" name=\"N_statusStr1Stolb3_4\" value=\"V_statusStr1Stolb3_4\" class=\"statusProf\"><br><label class=\"statusProfPunkt\" for=\"statusStr1Stolb3_4\">Подписчик</label><br><input type=\"checkbox\" checked id=\"statusStr1Stolb3_5\" name=\"N_statusStr1Stolb3_5\" value=\"V_statusStr1Stolb3_5\" class=\"statusProf\"><br><label class=\"statusProfPunkt\" for=\"statusStr1Stolb3_5\">Модератор</label><br><input type=\"checkbox\" checked id=\"statusStr1Stolb3_6\" name=\"N_statusStr1Stolb3_6\" value=\"V_statusStr1Stolb3_6\" class=\"statusProf\"><br><label class=\"statusProfPunkt\" for=\"statusStr1Stolb3_6\">Админ</label><br><input type=\"checkbox\" checked id=\"statusStr1Stolb3_7\" name=\"N_statusStr1Stolb3_7\" value=\"V_statusStr1Stolb3_7\" class=\"statusProf\"><br><label class=\"statusProfPunkt\" for=\"statusStr1Stolb3_7\">Не подтвердил</label><br>', NULL),
(3, 2, 'checkbox', 'id', 'statusStr2Stolb3', 0),
(3, 2, 'checkbox', 'for', 'statusStr2Stolb3', 0),
(3, 2, 'checkbox', 'name', 'N_statusStr2Stolb3', 0),
(3, 2, 'checkbox', 'value', 'V_statusStr2Stolb3', 0),
(3, 2, 'checkbox', 'Текст 1', 'Гость', 0),
(3, 2, 'checkbox', 'Текст 2', 'Пользователь', 0),
(3, 2, 'checkbox', 'Текст 3', 'Редактор', 0),
(3, 2, 'checkbox', 'Текст 4', 'Подписчик', 0),
(3, 2, 'checkbox', 'Текст 5', 'Модератор', 0),
(3, 2, 'checkbox', 'Текст 6', 'Админ', 0),
(3, 2, 'checkbox', 'Текст 7', 'Не подтвердил', 0),
(2, 2, 'text', 'name', 'nameProfil', 0),
(2, 2, 'text', 'value', 'Введите имя', 0),
(3, 2, 'checkbox', 'class для label', 'statusProfPunkt', 0),
(3, 1, 'checkbox', 'число строк', '7', 0),
(3, 1, 'checkbox', 'блок', '<input type=\"checkbox\" checked id=\"statusStr1Stolb3_1\" name=\"N_statusStr1Stolb3_1\" value=\"V_statusStr1Stolb3_1\" class=\"statusProf\"><br><label class=\"statusProfPunkt\" for=\"statusStr1Stolb3_1\">Гость</label><br><input type=\"checkbox\" checked id=\"statusStr1Stolb3_2\" name=\"N_statusStr1Stolb3_2\" value=\"V_statusStr1Stolb3_2\" class=\"statusProf\"><br><label class=\"statusProfPunkt\" for=\"statusStr1Stolb3_2\">Пользователь</label><br><input type=\"checkbox\" checked id=\"statusStr1Stolb3_3\" name=\"N_statusStr1Stolb3_3\" value=\"V_statusStr1Stolb3_3\" class=\"statusProf\"><br><label class=\"statusProfPunkt\" for=\"statusStr1Stolb3_3\">Редактор</label><br><input type=\"checkbox\" checked id=\"statusStr1Stolb3_4\" name=\"N_statusStr1Stolb3_4\" value=\"V_statusStr1Stolb3_4\" class=\"statusProf\"><br><label class=\"statusProfPunkt\" for=\"statusStr1Stolb3_4\">Подписчик</label><br><input type=\"checkbox\" checked id=\"statusStr1Stolb3_5\" name=\"N_statusStr1Stolb3_5\" value=\"V_statusStr1Stolb3_5\" class=\"statusProf\"><br><label class=\"statusProfPunkt\" for=\"statusStr1Stolb3_5\">Модератор</label><br><input type=\"checkbox\" checked id=\"statusStr1Stolb3_6\" name=\"N_statusStr1Stolb3_6\" value=\"V_statusStr1Stolb3_6\" class=\"statusProf\"><br><label class=\"statusProfPunkt\" for=\"statusStr1Stolb3_6\">Админ</label><br><input type=\"checkbox\" checked id=\"statusStr1Stolb3_7\" name=\"N_statusStr1Stolb3_7\" value=\"V_statusStr1Stolb3_7\" class=\"statusProf\"><br><label class=\"statusProfPunkt\" for=\"statusStr1Stolb3_7\">Не подтвердил</label><br>', NULL),
(3, 2, 'checkbox', 'class', 'statusProf', 0),
(3, 2, 'checkbox', 'число строк', '7', 0),
(3, 2, 'checkbox', 'блок', '<input type=\"checkbox\" id=\"statusStr2Stolb3_1\" name=\"N_statusStr2Stolb3_1\" value=\"V_statusStr2Stolb3_1\" class=\"statusProf\"><br><label class=\"statusProfPunkt\" for=\"statusStr2Stolb3_1\">Гость</label><br><input type=\"checkbox\" id=\"statusStr2Stolb3_2\" name=\"N_statusStr2Stolb3_2\" value=\"V_statusStr2Stolb3_2\" class=\"statusProf\"><br><label class=\"statusProfPunkt\" for=\"statusStr2Stolb3_2\">Пользователь</label><br><input type=\"checkbox\" id=\"statusStr2Stolb3_3\" name=\"N_statusStr2Stolb3_3\" value=\"V_statusStr2Stolb3_3\" class=\"statusProf\"><br><label class=\"statusProfPunkt\" for=\"statusStr2Stolb3_3\">Редактор</label><br><input type=\"checkbox\" id=\"statusStr2Stolb3_4\" name=\"N_statusStr2Stolb3_4\" value=\"V_statusStr2Stolb3_4\" class=\"statusProf\"><br><label class=\"statusProfPunkt\" for=\"statusStr2Stolb3_4\">Подписчик</label><br><input type=\"checkbox\" id=\"statusStr2Stolb3_5\" name=\"N_statusStr2Stolb3_5\" value=\"V_statusStr2Stolb3_5\" class=\"statusProf\"><br><label class=\"statusProfPunkt\" for=\"statusStr2Stolb3_5\">Модератор</label><br><input type=\"checkbox\" id=\"statusStr2Stolb3_6\" name=\"N_statusStr2Stolb3_6\" value=\"V_statusStr2Stolb3_6\" class=\"statusProf\"><br><label class=\"statusProfPunkt\" for=\"statusStr2Stolb3_6\">Админ</label><br><input type=\"checkbox\" id=\"statusStr2Stolb3_7\" name=\"N_statusStr2Stolb3_7\" value=\"V_statusStr2Stolb3_7\" class=\"statusProf\"><br><label class=\"statusProfPunkt\" for=\"statusStr2Stolb3_7\">Не подтвердил</label><br>', NULL),
(2, 1, 'text', 'class', 'urlFoto urlurlFoto', 0),
(0, 0, 'form', 'ширина столбцов bootstrap', '3-6-2-1', 0),
(0, 0, 'form', 'разделение блоков с HR', '1', 0),
(0, 0, 'form', 'разделение блоков с BR', '1', 0),
(1, 2, 'p', 'источник текста', '2-2', 0),
(1, 2, 'p', 'class', 'nameProfil', 0),
(1, 3, 'p', 'class', 'nameProfil', 0),
(1, 3, 'p', 'источник текста', '3-2', 0),
(2, 3, 'text', 'value', 'Введите фамилию', 0),
(2, 3, 'text', 'name', 'profilName2', 0),
(3, 3, 'checkbox', 'очистить аттрибуты', '', 0),
(3, 3, 'checkbox', 'id', 'statusStr3Stolb3', NULL),
(3, 3, 'checkbox', 'for', 'statusStr3Stolb3', NULL),
(3, 3, 'checkbox', 'name', 'N_statusStr3Stolb3', NULL),
(3, 3, 'checkbox', 'value', 'V_statusStr3Stolb3', NULL),
(3, 3, 'checkbox', 'Текст 1', 'Гость', NULL),
(3, 3, 'checkbox', 'Текст 2', 'Пользователь', NULL),
(3, 3, 'checkbox', 'Текст 3', 'Редактор', NULL),
(3, 3, 'checkbox', 'Текст 4', 'Подписчик', NULL),
(3, 3, 'checkbox', 'Текст 5', 'Модератор', NULL),
(3, 3, 'checkbox', 'Текст 6', 'Админ', NULL),
(3, 3, 'checkbox', 'Текст 7', 'Не подтвердил', NULL),
(3, 3, 'checkbox', 'class для label', 'statusProfPunkt', NULL),
(3, 3, 'checkbox', 'class', 'statusProf', NULL),
(3, 3, 'checkbox', 'число строк', '7', NULL),
(3, 3, 'checkbox', 'блок', '<input type=\"checkbox\" id=\"statusStr3Stolb3_1\" name=\"N_statusStr3Stolb3_1\" value=\"V_statusStr3Stolb3_1\" class=\"statusProf\"><br><label class=\"statusProfPunkt\" for=\"statusStr3Stolb3_1\">Гость</label><br><input type=\"checkbox\" id=\"statusStr3Stolb3_2\" name=\"N_statusStr3Stolb3_2\" value=\"V_statusStr3Stolb3_2\" class=\"statusProf\"><br><label class=\"statusProfPunkt\" for=\"statusStr3Stolb3_2\">Пользователь</label><br><input type=\"checkbox\" id=\"statusStr3Stolb3_3\" name=\"N_statusStr3Stolb3_3\" value=\"V_statusStr3Stolb3_3\" class=\"statusProf\"><br><label class=\"statusProfPunkt\" for=\"statusStr3Stolb3_3\">Редактор</label><br><input type=\"checkbox\" id=\"statusStr3Stolb3_4\" name=\"N_statusStr3Stolb3_4\" value=\"V_statusStr3Stolb3_4\" class=\"statusProf\"><br><label class=\"statusProfPunkt\" for=\"statusStr3Stolb3_4\">Подписчик</label><br><input type=\"checkbox\" id=\"statusStr3Stolb3_5\" name=\"N_statusStr3Stolb3_5\" value=\"V_statusStr3Stolb3_5\" class=\"statusProf\"><br><label class=\"statusProfPunkt\" for=\"statusStr3Stolb3_5\">Модератор</label><br><input type=\"checkbox\" id=\"statusStr3Stolb3_6\" name=\"N_statusStr3Stolb3_6\" value=\"V_statusStr3Stolb3_6\" class=\"statusProf\"><br><label class=\"statusProfPunkt\" for=\"statusStr3Stolb3_6\">Админ</label><br><input type=\"checkbox\" id=\"statusStr3Stolb3_7\" name=\"N_statusStr3Stolb3_7\" value=\"V_statusStr3Stolb3_7\" class=\"statusProf\"><br><label class=\"statusProfPunkt\" for=\"statusStr3Stolb3_7\">Не подтвердил</label><br>', NULL),
(3, 3, 'checkbox', 'импорт из клетки ?-?', '2-3', 0),
(3, 4, 'checkbox', 'очистить аттрибуты', '', 0),
(3, 4, 'checkbox', 'очистить аттрибуты', '', NULL),
(3, 4, 'checkbox', 'id', 'statusStr4Stolb3', NULL),
(3, 4, 'checkbox', 'for', 'statusStr4Stolb3', NULL),
(3, 4, 'checkbox', 'name', 'N_statusStr4Stolb3', NULL),
(3, 4, 'checkbox', 'value', 'V_statusStr4Stolb3', NULL),
(3, 4, 'checkbox', 'Текст 1', 'Гость', NULL),
(3, 4, 'checkbox', 'Текст 2', 'Пользователь', NULL),
(3, 4, 'checkbox', 'Текст 3', 'Редактор', NULL),
(3, 4, 'checkbox', 'Текст 4', 'Подписчик', NULL),
(3, 4, 'checkbox', 'Текст 5', 'Модератор', NULL),
(3, 4, 'checkbox', 'Текст 6', 'Админ', NULL),
(3, 4, 'checkbox', 'Текст 7', 'Не подтвердил', NULL),
(3, 4, 'checkbox', 'class для label', 'statusProfPunkt', NULL),
(3, 4, 'checkbox', 'class', 'statusProf', NULL),
(3, 4, 'checkbox', 'число строк', '7', NULL),
(3, 4, 'checkbox', 'блок', '<input type=\"checkbox\" id=\"statusStr4Stolb3_1\" name=\"N_statusStr4Stolb3_1\" value=\"V_statusStr4Stolb3_1\" class=\"statusProf\"><br><label class=\"statusProfPunkt\" for=\"statusStr4Stolb3_1\">Гость</label><br><input type=\"checkbox\" id=\"statusStr4Stolb3_2\" name=\"N_statusStr4Stolb3_2\" value=\"V_statusStr4Stolb3_2\" class=\"statusProf\"><br><label class=\"statusProfPunkt\" for=\"statusStr4Stolb3_2\">Пользователь</label><br><input type=\"checkbox\" id=\"statusStr4Stolb3_3\" name=\"N_statusStr4Stolb3_3\" value=\"V_statusStr4Stolb3_3\" class=\"statusProf\"><br><label class=\"statusProfPunkt\" for=\"statusStr4Stolb3_3\">Редактор</label><br><input type=\"checkbox\" id=\"statusStr4Stolb3_4\" name=\"N_statusStr4Stolb3_4\" value=\"V_statusStr4Stolb3_4\" class=\"statusProf\"><br><label class=\"statusProfPunkt\" for=\"statusStr4Stolb3_4\">Подписчик</label><br><input type=\"checkbox\" id=\"statusStr4Stolb3_5\" name=\"N_statusStr4Stolb3_5\" value=\"V_statusStr4Stolb3_5\" class=\"statusProf\"><br><label class=\"statusProfPunkt\" for=\"statusStr4Stolb3_5\">Модератор</label><br><input type=\"checkbox\" id=\"statusStr4Stolb3_6\" name=\"N_statusStr4Stolb3_6\" value=\"V_statusStr4Stolb3_6\" class=\"statusProf\"><br><label class=\"statusProfPunkt\" for=\"statusStr4Stolb3_6\">Админ</label><br><input type=\"checkbox\" id=\"statusStr4Stolb3_7\" name=\"N_statusStr4Stolb3_7\" value=\"V_statusStr4Stolb3_7\" class=\"statusProf\"><br><label class=\"statusProfPunkt\" for=\"statusStr4Stolb3_7\">Не подтвердил</label><br>', NULL),
(3, 4, 'checkbox', 'импорт из клетки ?-?', '2-3', NULL),
(3, 4, 'checkbox', 'импорт из клетки ?-?', '3-3', 0),
(3, 5, 'checkbox', 'очистить аттрибуты', '', NULL),
(3, 5, 'checkbox', 'id', 'statusStr5Stolb3', NULL),
(3, 5, 'checkbox', 'for', 'statusStr5Stolb3', NULL),
(3, 5, 'checkbox', 'name', 'N_statusStr5Stolb3', NULL),
(3, 5, 'checkbox', 'value', 'V_statusStr5Stolb3', NULL),
(3, 5, 'checkbox', 'Текст 1', 'Гость', NULL),
(3, 5, 'checkbox', 'Текст 2', 'Пользователь', NULL),
(3, 5, 'checkbox', 'Текст 3', 'Редактор', NULL),
(3, 5, 'checkbox', 'Текст 4', 'Подписчик', NULL),
(3, 5, 'checkbox', 'Текст 5', 'Модератор', NULL),
(3, 5, 'checkbox', 'Текст 6', 'Админ', NULL),
(3, 5, 'checkbox', 'Текст 7', 'Не подтвердил', NULL),
(3, 5, 'checkbox', 'class для label', 'statusProfPunkt', NULL),
(3, 5, 'checkbox', 'class', 'statusProf', NULL),
(3, 5, 'checkbox', 'число строк', '7', NULL),
(3, 5, 'checkbox', 'блок', '<input type=\"checkbox\" id=\"statusStr5Stolb3_1\" name=\"N_statusStr5Stolb3_1\" value=\"V_statusStr5Stolb3_1\" class=\"statusProf\"><br><label class=\"statusProfPunkt\" for=\"statusStr5Stolb3_1\">Гость</label><br><input type=\"checkbox\" id=\"statusStr5Stolb3_2\" name=\"N_statusStr5Stolb3_2\" value=\"V_statusStr5Stolb3_2\" class=\"statusProf\"><br><label class=\"statusProfPunkt\" for=\"statusStr5Stolb3_2\">Пользователь</label><br><input type=\"checkbox\" id=\"statusStr5Stolb3_3\" name=\"N_statusStr5Stolb3_3\" value=\"V_statusStr5Stolb3_3\" class=\"statusProf\"><br><label class=\"statusProfPunkt\" for=\"statusStr5Stolb3_3\">Редактор</label><br><input type=\"checkbox\" id=\"statusStr5Stolb3_4\" name=\"N_statusStr5Stolb3_4\" value=\"V_statusStr5Stolb3_4\" class=\"statusProf\"><br><label class=\"statusProfPunkt\" for=\"statusStr5Stolb3_4\">Подписчик</label><br><input type=\"checkbox\" id=\"statusStr5Stolb3_5\" name=\"N_statusStr5Stolb3_5\" value=\"V_statusStr5Stolb3_5\" class=\"statusProf\"><br><label class=\"statusProfPunkt\" for=\"statusStr5Stolb3_5\">Модератор</label><br><input type=\"checkbox\" id=\"statusStr5Stolb3_6\" name=\"N_statusStr5Stolb3_6\" value=\"V_statusStr5Stolb3_6\" class=\"statusProf\"><br><label class=\"statusProfPunkt\" for=\"statusStr5Stolb3_6\">Админ</label><br><input type=\"checkbox\" id=\"statusStr5Stolb3_7\" name=\"N_statusStr5Stolb3_7\" value=\"V_statusStr5Stolb3_7\" class=\"statusProf\"><br><label class=\"statusProfPunkt\" for=\"statusStr5Stolb3_7\">Не подтвердил</label><br>', NULL),
(3, 5, 'checkbox', 'импорт из клетки ?-?', '2-3', NULL),
(3, 5, 'checkbox', 'импорт из клетки ?-?', '3-3', 0),
(3, 6, 'checkbox', 'очистить аттрибуты', '', NULL),
(3, 6, 'checkbox', 'id', 'statusStr6Stolb3', NULL),
(3, 6, 'checkbox', 'for', 'statusStr6Stolb3', NULL),
(3, 6, 'checkbox', 'name', 'N_statusStr6Stolb3', NULL),
(3, 6, 'checkbox', 'value', 'V_statusStr6Stolb3', NULL),
(3, 6, 'checkbox', 'Текст 1', 'Гость', NULL),
(3, 6, 'checkbox', 'Текст 2', 'Пользователь', NULL),
(3, 6, 'checkbox', 'Текст 3', 'Редактор', NULL),
(3, 6, 'checkbox', 'Текст 4', 'Подписчик', NULL),
(3, 6, 'checkbox', 'Текст 5', 'Модератор', NULL),
(3, 6, 'checkbox', 'Текст 6', 'Админ', NULL),
(3, 6, 'checkbox', 'Текст 7', 'Не подтвердил', NULL),
(3, 6, 'checkbox', 'class для label', 'statusProfPunkt', NULL),
(3, 6, 'checkbox', 'class', 'statusProf', NULL),
(3, 6, 'checkbox', 'число строк', '7', NULL),
(3, 6, 'checkbox', 'блок', '<input type=\"checkbox\" id=\"statusStr6Stolb3_1\" name=\"N_statusStr6Stolb3_1\" value=\"V_statusStr6Stolb3_1\" class=\"statusProf\"><br><label class=\"statusProfPunkt\" for=\"statusStr6Stolb3_1\">Гость</label><br><input type=\"checkbox\" id=\"statusStr6Stolb3_2\" name=\"N_statusStr6Stolb3_2\" value=\"V_statusStr6Stolb3_2\" class=\"statusProf\"><br><label class=\"statusProfPunkt\" for=\"statusStr6Stolb3_2\">Пользователь</label><br><input type=\"checkbox\" id=\"statusStr6Stolb3_3\" name=\"N_statusStr6Stolb3_3\" value=\"V_statusStr6Stolb3_3\" class=\"statusProf\"><br><label class=\"statusProfPunkt\" for=\"statusStr6Stolb3_3\">Редактор</label><br><input type=\"checkbox\" id=\"statusStr6Stolb3_4\" name=\"N_statusStr6Stolb3_4\" value=\"V_statusStr6Stolb3_4\" class=\"statusProf\"><br><label class=\"statusProfPunkt\" for=\"statusStr6Stolb3_4\">Подписчик</label><br><input type=\"checkbox\" id=\"statusStr6Stolb3_5\" name=\"N_statusStr6Stolb3_5\" value=\"V_statusStr6Stolb3_5\" class=\"statusProf\"><br><label class=\"statusProfPunkt\" for=\"statusStr6Stolb3_5\">Модератор</label><br><input type=\"checkbox\" id=\"statusStr6Stolb3_6\" name=\"N_statusStr6Stolb3_6\" value=\"V_statusStr6Stolb3_6\" class=\"statusProf\"><br><label class=\"statusProfPunkt\" for=\"statusStr6Stolb3_6\">Админ</label><br><input type=\"checkbox\" id=\"statusStr6Stolb3_7\" name=\"N_statusStr6Stolb3_7\" value=\"V_statusStr6Stolb3_7\" class=\"statusProf\"><br><label class=\"statusProfPunkt\" for=\"statusStr6Stolb3_7\">Не подтвердил</label><br>', NULL),
(3, 6, 'checkbox', 'импорт из клетки ?-?', '2-3', NULL),
(3, 6, 'checkbox', 'импорт из клетки ?-?', '3-3', 0),
(3, 7, 'checkbox', 'очистить аттрибуты', '', NULL),
(3, 7, 'checkbox', 'id', 'statusStr7Stolb3', NULL),
(3, 7, 'checkbox', 'for', 'statusStr7Stolb3', NULL),
(3, 7, 'checkbox', 'name', 'N_statusStr7Stolb3', NULL),
(3, 7, 'checkbox', 'value', 'V_statusStr7Stolb3', NULL),
(3, 7, 'checkbox', 'Текст 1', 'Гость', NULL),
(3, 7, 'checkbox', 'Текст 2', 'Пользователь', NULL),
(3, 7, 'checkbox', 'Текст 3', 'Редактор', NULL),
(3, 7, 'checkbox', 'Текст 4', 'Подписчик', NULL),
(3, 7, 'checkbox', 'Текст 5', 'Модератор', NULL),
(3, 7, 'checkbox', 'Текст 6', 'Админ', NULL),
(3, 7, 'checkbox', 'Текст 7', 'Не подтвердил', NULL),
(3, 7, 'checkbox', 'class для label', 'statusProfPunkt', NULL),
(3, 7, 'checkbox', 'class', 'statusProf', NULL),
(3, 7, 'checkbox', 'число строк', '7', NULL),
(3, 7, 'checkbox', 'блок', '<input type=\"checkbox\" id=\"statusStr7Stolb3_1\" name=\"N_statusStr7Stolb3_1\" value=\"V_statusStr7Stolb3_1\" class=\"statusProf\"><br><label class=\"statusProfPunkt\" for=\"statusStr7Stolb3_1\">Гость</label><br><input type=\"checkbox\" id=\"statusStr7Stolb3_2\" name=\"N_statusStr7Stolb3_2\" value=\"V_statusStr7Stolb3_2\" class=\"statusProf\"><br><label class=\"statusProfPunkt\" for=\"statusStr7Stolb3_2\">Пользователь</label><br><input type=\"checkbox\" id=\"statusStr7Stolb3_3\" name=\"N_statusStr7Stolb3_3\" value=\"V_statusStr7Stolb3_3\" class=\"statusProf\"><br><label class=\"statusProfPunkt\" for=\"statusStr7Stolb3_3\">Редактор</label><br><input type=\"checkbox\" id=\"statusStr7Stolb3_4\" name=\"N_statusStr7Stolb3_4\" value=\"V_statusStr7Stolb3_4\" class=\"statusProf\"><br><label class=\"statusProfPunkt\" for=\"statusStr7Stolb3_4\">Подписчик</label><br><input type=\"checkbox\" id=\"statusStr7Stolb3_5\" name=\"N_statusStr7Stolb3_5\" value=\"V_statusStr7Stolb3_5\" class=\"statusProf\"><br><label class=\"statusProfPunkt\" for=\"statusStr7Stolb3_5\">Модератор</label><br><input type=\"checkbox\" id=\"statusStr7Stolb3_6\" name=\"N_statusStr7Stolb3_6\" value=\"V_statusStr7Stolb3_6\" class=\"statusProf\"><br><label class=\"statusProfPunkt\" for=\"statusStr7Stolb3_6\">Админ</label><br><input type=\"checkbox\" id=\"statusStr7Stolb3_7\" name=\"N_statusStr7Stolb3_7\" value=\"V_statusStr7Stolb3_7\" class=\"statusProf\"><br><label class=\"statusProfPunkt\" for=\"statusStr7Stolb3_7\">Не подтвердил</label><br>', NULL),
(3, 7, 'checkbox', 'импорт из клетки ?-?', '2-3', NULL),
(3, 7, 'checkbox', 'импорт из клетки ?-?', '3-3', 0),
(3, 8, 'checkbox', 'очистить аттрибуты', '', NULL),
(3, 8, 'checkbox', 'id', 'statusStr8Stolb3', NULL),
(3, 8, 'checkbox', 'for', 'statusStr8Stolb3', NULL),
(3, 8, 'checkbox', 'name', 'N_statusStr8Stolb3', NULL),
(3, 8, 'checkbox', 'value', 'V_statusStr8Stolb3', NULL),
(3, 8, 'checkbox', 'Текст 1', 'Гость', NULL),
(3, 8, 'checkbox', 'Текст 2', 'Пользователь', NULL),
(3, 8, 'checkbox', 'Текст 3', 'Редактор', NULL),
(3, 8, 'checkbox', 'Текст 4', 'Подписчик', NULL),
(3, 8, 'checkbox', 'Текст 5', 'Модератор', NULL),
(3, 8, 'checkbox', 'Текст 6', 'Админ', NULL),
(3, 8, 'checkbox', 'Текст 7', 'Не подтвердил', NULL),
(3, 8, 'checkbox', 'class для label', 'statusProfPunkt', NULL),
(3, 8, 'checkbox', 'class', 'statusProf', NULL),
(3, 8, 'checkbox', 'число строк', '7', NULL),
(3, 8, 'checkbox', 'блок', '<input type=\"checkbox\" id=\"statusStr8Stolb3_1\" name=\"N_statusStr8Stolb3_1\" value=\"V_statusStr8Stolb3_1\" class=\"statusProf\"><br><label class=\"statusProfPunkt\" for=\"statusStr8Stolb3_1\">Гость</label><br><input type=\"checkbox\" id=\"statusStr8Stolb3_2\" name=\"N_statusStr8Stolb3_2\" value=\"V_statusStr8Stolb3_2\" class=\"statusProf\"><br><label class=\"statusProfPunkt\" for=\"statusStr8Stolb3_2\">Пользователь</label><br><input type=\"checkbox\" id=\"statusStr8Stolb3_3\" name=\"N_statusStr8Stolb3_3\" value=\"V_statusStr8Stolb3_3\" class=\"statusProf\"><br><label class=\"statusProfPunkt\" for=\"statusStr8Stolb3_3\">Редактор</label><br><input type=\"checkbox\" id=\"statusStr8Stolb3_4\" name=\"N_statusStr8Stolb3_4\" value=\"V_statusStr8Stolb3_4\" class=\"statusProf\"><br><label class=\"statusProfPunkt\" for=\"statusStr8Stolb3_4\">Подписчик</label><br><input type=\"checkbox\" id=\"statusStr8Stolb3_5\" name=\"N_statusStr8Stolb3_5\" value=\"V_statusStr8Stolb3_5\" class=\"statusProf\"><br><label class=\"statusProfPunkt\" for=\"statusStr8Stolb3_5\">Модератор</label><br><input type=\"checkbox\" id=\"statusStr8Stolb3_6\" name=\"N_statusStr8Stolb3_6\" value=\"V_statusStr8Stolb3_6\" class=\"statusProf\"><br><label class=\"statusProfPunkt\" for=\"statusStr8Stolb3_6\">Админ</label><br><input type=\"checkbox\" id=\"statusStr8Stolb3_7\" name=\"N_statusStr8Stolb3_7\" value=\"V_statusStr8Stolb3_7\" class=\"statusProf\"><br><label class=\"statusProfPunkt\" for=\"statusStr8Stolb3_7\">Не подтвердил</label><br>', NULL),
(3, 8, 'checkbox', 'импорт из клетки ?-?', '2-3', NULL),
(3, 8, 'checkbox', 'импорт из клетки ?-?', '3-3', 0),
(3, 9, 'checkbox', 'очистить аттрибуты', '', NULL),
(3, 9, 'checkbox', 'id', 'statusStr9Stolb3', NULL),
(3, 9, 'checkbox', 'for', 'statusStr9Stolb3', NULL),
(3, 9, 'checkbox', 'name', 'N_statusStr9Stolb3', NULL),
(3, 9, 'checkbox', 'value', 'V_statusStr9Stolb3', NULL),
(3, 9, 'checkbox', 'Текст 1', 'Гость', NULL),
(3, 9, 'checkbox', 'Текст 2', 'Пользователь', NULL),
(3, 9, 'checkbox', 'Текст 3', 'Редактор', NULL),
(3, 9, 'checkbox', 'Текст 4', 'Подписчик', NULL),
(3, 9, 'checkbox', 'Текст 5', 'Модератор', NULL),
(3, 9, 'checkbox', 'Текст 6', 'Админ', NULL),
(3, 9, 'checkbox', 'Текст 7', 'Не подтвердил', NULL),
(3, 9, 'checkbox', 'class для label', 'statusProfPunkt', NULL),
(3, 9, 'checkbox', 'class', 'statusProf', NULL),
(3, 9, 'checkbox', 'число строк', '7', NULL),
(3, 9, 'checkbox', 'блок', '<input type=\"checkbox\" id=\"statusStr9Stolb3_1\" name=\"N_statusStr9Stolb3_1\" value=\"V_statusStr9Stolb3_1\" class=\"statusProf\"><br><label class=\"statusProfPunkt\" for=\"statusStr9Stolb3_1\">Гость</label><br><input type=\"checkbox\" id=\"statusStr9Stolb3_2\" name=\"N_statusStr9Stolb3_2\" value=\"V_statusStr9Stolb3_2\" class=\"statusProf\"><br><label class=\"statusProfPunkt\" for=\"statusStr9Stolb3_2\">Пользователь</label><br><input type=\"checkbox\" id=\"statusStr9Stolb3_3\" name=\"N_statusStr9Stolb3_3\" value=\"V_statusStr9Stolb3_3\" class=\"statusProf\"><br><label class=\"statusProfPunkt\" for=\"statusStr9Stolb3_3\">Редактор</label><br><input type=\"checkbox\" id=\"statusStr9Stolb3_4\" name=\"N_statusStr9Stolb3_4\" value=\"V_statusStr9Stolb3_4\" class=\"statusProf\"><br><label class=\"statusProfPunkt\" for=\"statusStr9Stolb3_4\">Подписчик</label><br><input type=\"checkbox\" id=\"statusStr9Stolb3_5\" name=\"N_statusStr9Stolb3_5\" value=\"V_statusStr9Stolb3_5\" class=\"statusProf\"><br><label class=\"statusProfPunkt\" for=\"statusStr9Stolb3_5\">Модератор</label><br><input type=\"checkbox\" id=\"statusStr9Stolb3_6\" name=\"N_statusStr9Stolb3_6\" value=\"V_statusStr9Stolb3_6\" class=\"statusProf\"><br><label class=\"statusProfPunkt\" for=\"statusStr9Stolb3_6\">Админ</label><br><input type=\"checkbox\" id=\"statusStr9Stolb3_7\" name=\"N_statusStr9Stolb3_7\" value=\"V_statusStr9Stolb3_7\" class=\"statusProf\"><br><label class=\"statusProfPunkt\" for=\"statusStr9Stolb3_7\">Не подтвердил</label><br>', NULL),
(3, 9, 'checkbox', 'импорт из клетки ?-?', '2-3', NULL),
(3, 9, 'checkbox', 'импорт из клетки ?-?', '3-3', 0),
(3, 10, 'checkbox', 'очистить аттрибуты', '', NULL),
(3, 10, 'checkbox', 'id', 'statusStr10Stolb3', NULL),
(3, 10, 'checkbox', 'for', 'statusStr10Stolb3', NULL),
(3, 10, 'checkbox', 'name', 'N_statusStr10Stolb3', NULL),
(3, 10, 'checkbox', 'value', 'V_statusStr10Stolb3', NULL),
(3, 10, 'checkbox', 'Текст 1', 'Гость', NULL),
(3, 10, 'checkbox', 'Текст 2', 'Пользователь', NULL),
(3, 10, 'checkbox', 'Текст 3', 'Редактор', NULL),
(3, 10, 'checkbox', 'Текст 4', 'Подписчик', NULL),
(3, 10, 'checkbox', 'Текст 5', 'Модератор', NULL),
(3, 10, 'checkbox', 'Текст 6', 'Админ', NULL),
(3, 10, 'checkbox', 'Текст 7', 'Не подтвердил', NULL),
(3, 10, 'checkbox', 'class для label', 'statusProfPunkt', NULL),
(3, 10, 'checkbox', 'class', 'statusProf', NULL),
(3, 10, 'checkbox', 'число строк', '7', NULL),
(3, 10, 'checkbox', 'блок', '<input type=\"checkbox\" id=\"statusStr10Stolb3_1\" name=\"N_statusStr10Stolb3_1\" value=\"V_statusStr10Stolb3_1\" class=\"statusProf\"><br><label class=\"statusProfPunkt\" for=\"statusStr10Stolb3_1\">Гость</label><br><input type=\"checkbox\" id=\"statusStr10Stolb3_2\" name=\"N_statusStr10Stolb3_2\" value=\"V_statusStr10Stolb3_2\" class=\"statusProf\"><br><label class=\"statusProfPunkt\" for=\"statusStr10Stolb3_2\">Пользователь</label><br><input type=\"checkbox\" id=\"statusStr10Stolb3_3\" name=\"N_statusStr10Stolb3_3\" value=\"V_statusStr10Stolb3_3\" class=\"statusProf\"><br><label class=\"statusProfPunkt\" for=\"statusStr10Stolb3_3\">Редактор</label><br><input type=\"checkbox\" id=\"statusStr10Stolb3_4\" name=\"N_statusStr10Stolb3_4\" value=\"V_statusStr10Stolb3_4\" class=\"statusProf\"><br><label class=\"statusProfPunkt\" for=\"statusStr10Stolb3_4\">Подписчик</label><br><input type=\"checkbox\" id=\"statusStr10Stolb3_5\" name=\"N_statusStr10Stolb3_5\" value=\"V_statusStr10Stolb3_5\" class=\"statusProf\"><br><label class=\"statusProfPunkt\" for=\"statusStr10Stolb3_5\">Модератор</label><br><input type=\"checkbox\" id=\"statusStr10Stolb3_6\" name=\"N_statusStr10Stolb3_6\" value=\"V_statusStr10Stolb3_6\" class=\"statusProf\"><br><label class=\"statusProfPunkt\" for=\"statusStr10Stolb3_6\">Админ</label><br><input type=\"checkbox\" id=\"statusStr10Stolb3_7\" name=\"N_statusStr10Stolb3_7\" value=\"V_statusStr10Stolb3_7\" class=\"statusProf\"><br><label class=\"statusProfPunkt\" for=\"statusStr10Stolb3_7\">Не подтвердил</label><br>', NULL),
(3, 10, 'checkbox', 'импорт из клетки ?-?', '2-3', NULL),
(3, 10, 'checkbox', 'импорт из клетки ?-?', '3-3', 0),
(3, 11, 'checkbox', 'очистить аттрибуты', '', NULL),
(3, 11, 'checkbox', 'id', 'statusStr11Stolb3', NULL),
(3, 11, 'checkbox', 'for', 'statusStr11Stolb3', NULL),
(3, 11, 'checkbox', 'name', 'N_statusStr11Stolb3', NULL),
(3, 11, 'checkbox', 'value', 'V_statusStr11Stolb3', NULL),
(3, 11, 'checkbox', 'Текст 1', 'Гость', NULL),
(3, 11, 'checkbox', 'Текст 2', 'Пользователь', NULL),
(3, 11, 'checkbox', 'Текст 3', 'Редактор', NULL),
(3, 11, 'checkbox', 'Текст 4', 'Подписчик', NULL),
(3, 11, 'checkbox', 'Текст 5', 'Модератор', NULL),
(3, 11, 'checkbox', 'Текст 6', 'Админ', NULL),
(3, 11, 'checkbox', 'Текст 7', 'Не подтвердил', NULL),
(3, 11, 'checkbox', 'class для label', 'statusProfPunkt', NULL),
(3, 11, 'checkbox', 'class', 'statusProf', NULL),
(3, 11, 'checkbox', 'число строк', '7', NULL),
(3, 11, 'checkbox', 'блок', '<input type=\"checkbox\" id=\"statusStr11Stolb3_1\" name=\"N_statusStr11Stolb3_1\" value=\"V_statusStr11Stolb3_1\" class=\"statusProf\"><br><label class=\"statusProfPunkt\" for=\"statusStr11Stolb3_1\">Гость</label><br><input type=\"checkbox\" id=\"statusStr11Stolb3_2\" name=\"N_statusStr11Stolb3_2\" value=\"V_statusStr11Stolb3_2\" class=\"statusProf\"><br><label class=\"statusProfPunkt\" for=\"statusStr11Stolb3_2\">Пользователь</label><br><input type=\"checkbox\" id=\"statusStr11Stolb3_3\" name=\"N_statusStr11Stolb3_3\" value=\"V_statusStr11Stolb3_3\" class=\"statusProf\"><br><label class=\"statusProfPunkt\" for=\"statusStr11Stolb3_3\">Редактор</label><br><input type=\"checkbox\" id=\"statusStr11Stolb3_4\" name=\"N_statusStr11Stolb3_4\" value=\"V_statusStr11Stolb3_4\" class=\"statusProf\"><br><label class=\"statusProfPunkt\" for=\"statusStr11Stolb3_4\">Подписчик</label><br><input type=\"checkbox\" id=\"statusStr11Stolb3_5\" name=\"N_statusStr11Stolb3_5\" value=\"V_statusStr11Stolb3_5\" class=\"statusProf\"><br><label class=\"statusProfPunkt\" for=\"statusStr11Stolb3_5\">Модератор</label><br><input type=\"checkbox\" id=\"statusStr11Stolb3_6\" name=\"N_statusStr11Stolb3_6\" value=\"V_statusStr11Stolb3_6\" class=\"statusProf\"><br><label class=\"statusProfPunkt\" for=\"statusStr11Stolb3_6\">Админ</label><br><input type=\"checkbox\" id=\"statusStr11Stolb3_7\" name=\"N_statusStr11Stolb3_7\" value=\"V_statusStr11Stolb3_7\" class=\"statusProf\"><br><label class=\"statusProfPunkt\" for=\"statusStr11Stolb3_7\">Не подтвердил</label><br>', NULL),
(3, 11, 'checkbox', 'импорт из клетки ?-?', '2-3', NULL),
(3, 11, 'checkbox', 'импорт из клетки ?-?', '3-3', 0),
(3, 12, 'checkbox', 'очистить аттрибуты', '', NULL),
(3, 12, 'checkbox', 'id', 'statusStr12Stolb3', NULL),
(3, 12, 'checkbox', 'for', 'statusStr12Stolb3', NULL),
(3, 12, 'checkbox', 'name', 'N_statusStr12Stolb3', NULL),
(3, 12, 'checkbox', 'value', 'V_statusStr12Stolb3', NULL),
(3, 12, 'checkbox', 'Текст 1', 'Гость', NULL),
(3, 12, 'checkbox', 'Текст 2', 'Пользователь', NULL),
(3, 12, 'checkbox', 'Текст 3', 'Редактор', NULL),
(3, 12, 'checkbox', 'Текст 4', 'Подписчик', NULL),
(3, 12, 'checkbox', 'Текст 5', 'Модератор', NULL),
(3, 12, 'checkbox', 'Текст 6', 'Админ', NULL),
(3, 12, 'checkbox', 'Текст 7', 'Не подтвердил', NULL),
(3, 12, 'checkbox', 'class для label', 'statusProfPunkt', NULL),
(3, 12, 'checkbox', 'class', 'statusProf', NULL),
(3, 12, 'checkbox', 'число строк', '7', NULL),
(3, 12, 'checkbox', 'блок', '<input type=\"checkbox\" id=\"statusStr12Stolb3_1\" name=\"N_statusStr12Stolb3_1\" value=\"V_statusStr12Stolb3_1\" class=\"statusProf\"><br><label class=\"statusProfPunkt\" for=\"statusStr12Stolb3_1\">Гость</label><br><input type=\"checkbox\" id=\"statusStr12Stolb3_2\" name=\"N_statusStr12Stolb3_2\" value=\"V_statusStr12Stolb3_2\" class=\"statusProf\"><br><label class=\"statusProfPunkt\" for=\"statusStr12Stolb3_2\">Пользователь</label><br><input type=\"checkbox\" id=\"statusStr12Stolb3_3\" name=\"N_statusStr12Stolb3_3\" value=\"V_statusStr12Stolb3_3\" class=\"statusProf\"><br><label class=\"statusProfPunkt\" for=\"statusStr12Stolb3_3\">Редактор</label><br><input type=\"checkbox\" id=\"statusStr12Stolb3_4\" name=\"N_statusStr12Stolb3_4\" value=\"V_statusStr12Stolb3_4\" class=\"statusProf\"><br><label class=\"statusProfPunkt\" for=\"statusStr12Stolb3_4\">Подписчик</label><br><input type=\"checkbox\" id=\"statusStr12Stolb3_5\" name=\"N_statusStr12Stolb3_5\" value=\"V_statusStr12Stolb3_5\" class=\"statusProf\"><br><label class=\"statusProfPunkt\" for=\"statusStr12Stolb3_5\">Модератор</label><br><input type=\"checkbox\" id=\"statusStr12Stolb3_6\" name=\"N_statusStr12Stolb3_6\" value=\"V_statusStr12Stolb3_6\" class=\"statusProf\"><br><label class=\"statusProfPunkt\" for=\"statusStr12Stolb3_6\">Админ</label><br><input type=\"checkbox\" id=\"statusStr12Stolb3_7\" name=\"N_statusStr12Stolb3_7\" value=\"V_statusStr12Stolb3_7\" class=\"statusProf\"><br><label class=\"statusProfPunkt\" for=\"statusStr12Stolb3_7\">Не подтвердил</label><br>', NULL),
(3, 12, 'checkbox', 'импорт из клетки ?-?', '2-3', NULL),
(3, 12, 'checkbox', 'импорт из клетки ?-?', '3-3', 0),
(3, 13, 'checkbox', 'очистить аттрибуты', '', NULL),
(3, 13, 'checkbox', 'id', 'statusStr13Stolb3', NULL),
(3, 13, 'checkbox', 'for', 'statusStr13Stolb3', NULL),
(3, 13, 'checkbox', 'name', 'N_statusStr13Stolb3', NULL),
(3, 13, 'checkbox', 'value', 'V_statusStr13Stolb3', NULL),
(3, 13, 'checkbox', 'Текст 1', 'Гость', NULL),
(3, 13, 'checkbox', 'Текст 2', 'Пользователь', NULL),
(3, 13, 'checkbox', 'Текст 3', 'Редактор', NULL),
(3, 13, 'checkbox', 'Текст 4', 'Подписчик', NULL),
(3, 13, 'checkbox', 'Текст 5', 'Модератор', NULL),
(3, 13, 'checkbox', 'Текст 6', 'Админ', NULL),
(3, 13, 'checkbox', 'Текст 7', 'Не подтвердил', NULL),
(3, 13, 'checkbox', 'class для label', 'statusProfPunkt', NULL),
(3, 13, 'checkbox', 'class', 'statusProf', NULL),
(3, 13, 'checkbox', 'число строк', '7', NULL),
(3, 13, 'checkbox', 'блок', '<input type=\"checkbox\" id=\"statusStr13Stolb3_1\" name=\"N_statusStr13Stolb3_1\" value=\"V_statusStr13Stolb3_1\" class=\"statusProf\"><br><label class=\"statusProfPunkt\" for=\"statusStr13Stolb3_1\">Гость</label><br><input type=\"checkbox\" id=\"statusStr13Stolb3_2\" name=\"N_statusStr13Stolb3_2\" value=\"V_statusStr13Stolb3_2\" class=\"statusProf\"><br><label class=\"statusProfPunkt\" for=\"statusStr13Stolb3_2\">Пользователь</label><br><input type=\"checkbox\" id=\"statusStr13Stolb3_3\" name=\"N_statusStr13Stolb3_3\" value=\"V_statusStr13Stolb3_3\" class=\"statusProf\"><br><label class=\"statusProfPunkt\" for=\"statusStr13Stolb3_3\">Редактор</label><br><input type=\"checkbox\" id=\"statusStr13Stolb3_4\" name=\"N_statusStr13Stolb3_4\" value=\"V_statusStr13Stolb3_4\" class=\"statusProf\"><br><label class=\"statusProfPunkt\" for=\"statusStr13Stolb3_4\">Подписчик</label><br><input type=\"checkbox\" id=\"statusStr13Stolb3_5\" name=\"N_statusStr13Stolb3_5\" value=\"V_statusStr13Stolb3_5\" class=\"statusProf\"><br><label class=\"statusProfPunkt\" for=\"statusStr13Stolb3_5\">Модератор</label><br><input type=\"checkbox\" id=\"statusStr13Stolb3_6\" name=\"N_statusStr13Stolb3_6\" value=\"V_statusStr13Stolb3_6\" class=\"statusProf\"><br><label class=\"statusProfPunkt\" for=\"statusStr13Stolb3_6\">Админ</label><br><input type=\"checkbox\" id=\"statusStr13Stolb3_7\" name=\"N_statusStr13Stolb3_7\" value=\"V_statusStr13Stolb3_7\" class=\"statusProf\"><br><label class=\"statusProfPunkt\" for=\"statusStr13Stolb3_7\">Не подтвердил</label><br>', NULL),
(3, 13, 'checkbox', 'импорт из клетки ?-?', '2-3', NULL),
(3, 13, 'checkbox', 'импорт из клетки ?-?', '3-3', 0),
(3, 14, 'checkbox', 'очистить аттрибуты', '', NULL),
(3, 14, 'checkbox', 'id', 'statusStr14Stolb3', NULL),
(3, 14, 'checkbox', 'for', 'statusStr14Stolb3', NULL),
(3, 14, 'checkbox', 'name', 'N_statusStr14Stolb3', NULL),
(3, 14, 'checkbox', 'value', 'V_statusStr14Stolb3', NULL),
(3, 14, 'checkbox', 'Текст 1', 'Гость', NULL),
(3, 14, 'checkbox', 'Текст 2', 'Пользователь', NULL),
(3, 14, 'checkbox', 'Текст 3', 'Редактор', NULL),
(3, 14, 'checkbox', 'Текст 4', 'Подписчик', NULL),
(3, 14, 'checkbox', 'Текст 5', 'Модератор', NULL),
(3, 14, 'checkbox', 'Текст 6', 'Админ', NULL),
(3, 14, 'checkbox', 'Текст 7', 'Не подтвердил', NULL),
(3, 14, 'checkbox', 'class для label', 'statusProfPunkt', NULL),
(3, 14, 'checkbox', 'class', 'statusProf', NULL),
(3, 14, 'checkbox', 'число строк', '7', NULL),
(3, 14, 'checkbox', 'блок', '<input type=\"checkbox\" id=\"statusStr14Stolb3_1\" name=\"N_statusStr14Stolb3_1\" value=\"V_statusStr14Stolb3_1\" class=\"statusProf\"><br><label class=\"statusProfPunkt\" for=\"statusStr14Stolb3_1\">Гость</label><br><input type=\"checkbox\" id=\"statusStr14Stolb3_2\" name=\"N_statusStr14Stolb3_2\" value=\"V_statusStr14Stolb3_2\" class=\"statusProf\"><br><label class=\"statusProfPunkt\" for=\"statusStr14Stolb3_2\">Пользователь</label><br><input type=\"checkbox\" id=\"statusStr14Stolb3_3\" name=\"N_statusStr14Stolb3_3\" value=\"V_statusStr14Stolb3_3\" class=\"statusProf\"><br><label class=\"statusProfPunkt\" for=\"statusStr14Stolb3_3\">Редактор</label><br><input type=\"checkbox\" id=\"statusStr14Stolb3_4\" name=\"N_statusStr14Stolb3_4\" value=\"V_statusStr14Stolb3_4\" class=\"statusProf\"><br><label class=\"statusProfPunkt\" for=\"statusStr14Stolb3_4\">Подписчик</label><br><input type=\"checkbox\" id=\"statusStr14Stolb3_5\" name=\"N_statusStr14Stolb3_5\" value=\"V_statusStr14Stolb3_5\" class=\"statusProf\"><br><label class=\"statusProfPunkt\" for=\"statusStr14Stolb3_5\">Модератор</label><br><input type=\"checkbox\" id=\"statusStr14Stolb3_6\" name=\"N_statusStr14Stolb3_6\" value=\"V_statusStr14Stolb3_6\" class=\"statusProf\"><br><label class=\"statusProfPunkt\" for=\"statusStr14Stolb3_6\">Админ</label><br><input type=\"checkbox\" id=\"statusStr14Stolb3_7\" name=\"N_statusStr14Stolb3_7\" value=\"V_statusStr14Stolb3_7\" class=\"statusProf\"><br><label class=\"statusProfPunkt\" for=\"statusStr14Stolb3_7\">Не подтвердил</label><br>', NULL),
(3, 14, 'checkbox', 'импорт из клетки ?-?', '2-3', NULL),
(3, 14, 'checkbox', 'импорт из клетки ?-?', '3-3', 0),
(1, 4, 'textarea', 'name', 'profilOsebe', 0),
(1, 4, 'textarea', 'текст на кнопке', 'Немного о себе', 0),
(2, 4, 'заголовок', 'p', '', 0),
(2, 4, 'заголовок', 'class', 'profilOsebeArea', 0),
(2, 4, 'p', 'источник текста', '4-1', 0),
(2, 4, 'p', 'class', 'profilOsebeP', 0),
(1, 5, 'text', 'class', 'mojSajt', 0),
(1, 5, 'text', 'name', 'mojSite', 0),
(1, 5, 'text', 'value', 'Мой сайт', 0),
(2, 5, 'text', 'class', 'mojSajt', 0),
(2, 5, 'text', 'name', 'mojSajt', 0),
(2, 5, 'text', 'value', 'ссылка на сайт', 0),
(1, 5, 'p', 'class', 'mojSiteP', 0),
(1, 5, 'p', 'текст по умолчанию', 'Мой сайт', 0),
(1, 6, 'p', 'текст по умолчанию', 'Моя почта', 0),
(1, 6, 'p', 'class', 'mujMailProfilP', 0),
(2, 6, 'text', 'name', 'profilMujMail', 0),
(2, 6, 'text', 'value', 'Моя почта', 0),
(2, 6, 'text', 'class', 'profilMojMailText', 0),
(2, 7, 'text', 'name', 'profilMujSkype', 0),
(1, 7, 'p', 'текст по умолчанию', 'Мой Skype', 0),
(1, 7, 'p', 'class', 'ProfilMujSkypeText', 0),
(2, 7, 'text', 'value', 'Мой Skype', 0),
(1, 8, 'p', 'текст по умолчанию', 'Мой WhatsApp', 0),
(1, 8, 'p', 'class', 'profilMujWhatsAppP', 0),
(2, 8, 'text', 'class', 'profilMujWhatsAppText', 0),
(2, 8, 'text', 'name', 'profilMujWhatsAppText', 0),
(2, 9, 'text', 'name', 'profilMojTelegram', 0),
(1, 9, 'p', 'текст по умолчанию', 'Мой Telegram', 0),
(1, 9, 'p', 'class', 'profilMojTelegram', 0),
(2, 9, 'text', 'value', 'Мой Telegram', 0),
(2, 8, 'text', 'value', 'Мой WhatsApp', 0),
(1, 10, 'p', 'текст по умолчанию', 'Мой Viber', 0),
(1, 10, 'p', 'class', 'profilMujViber', 0),
(2, 10, 'text', 'name', 'profilMujViber', 0),
(2, 10, 'text', 'value', 'Мой Viber', 0),
(2, 10, 'text', 'class', 'profilMujViberText', 0),
(1, 15, 'p', 'текст по умолчанию', 'facebook', 0),
(1, 15, 'p', 'class', 'profilfacebook', 0),
(2, 15, 'text', 'name', 'profilfacebook', 0),
(2, 15, 'text', 'value', 'Мой facebook', 0),
(2, 15, 'text', 'class', 'profilfacebookText', 0),
(2, 14, 'text', 'name', 'youtobeprofilText', 0),
(1, 14, 'p', 'текст по умолчанию', 'Мой youtube', 0),
(1, 14, 'p', 'class', 'profilYoutubeP', 0),
(2, 14, 'text', 'class', 'profilYoutubeText', 0),
(2, 14, 'text', 'value', 'Мой Youtube', 0),
(3, 15, 'checkbox', 'очистить аттрибуты', '', NULL),
(3, 15, 'checkbox', 'id', 'statusStr15Stolb3', NULL),
(3, 15, 'checkbox', 'for', 'statusStr15Stolb3', NULL),
(3, 15, 'checkbox', 'name', 'N_statusStr15Stolb3', NULL),
(3, 15, 'checkbox', 'value', 'V_statusStr15Stolb3', NULL),
(3, 15, 'checkbox', 'Текст 1', 'Гость', NULL),
(3, 15, 'checkbox', 'Текст 2', 'Пользователь', NULL),
(3, 15, 'checkbox', 'Текст 3', 'Редактор', NULL),
(3, 15, 'checkbox', 'Текст 4', 'Подписчик', NULL),
(3, 15, 'checkbox', 'Текст 5', 'Модератор', NULL),
(3, 15, 'checkbox', 'Текст 6', 'Админ', NULL),
(3, 15, 'checkbox', 'Текст 7', 'Не подтвердил', NULL),
(3, 15, 'checkbox', 'class для label', 'statusProfPunkt', NULL),
(3, 15, 'checkbox', 'class', 'statusProf', NULL),
(3, 15, 'checkbox', 'число строк', '7', NULL),
(3, 15, 'checkbox', 'блок', '<input type=\"checkbox\" id=\"statusStr15Stolb3_1\" name=\"N_statusStr15Stolb3_1\" value=\"V_statusStr15Stolb3_1\" class=\"statusProf\"><br><label class=\"statusProfPunkt\" for=\"statusStr15Stolb3_1\">Гость</label><br><input type=\"checkbox\" id=\"statusStr15Stolb3_2\" name=\"N_statusStr15Stolb3_2\" value=\"V_statusStr15Stolb3_2\" class=\"statusProf\"><br><label class=\"statusProfPunkt\" for=\"statusStr15Stolb3_2\">Пользователь</label><br><input type=\"checkbox\" id=\"statusStr15Stolb3_3\" name=\"N_statusStr15Stolb3_3\" value=\"V_statusStr15Stolb3_3\" class=\"statusProf\"><br><label class=\"statusProfPunkt\" for=\"statusStr15Stolb3_3\">Редактор</label><br><input type=\"checkbox\" id=\"statusStr15Stolb3_4\" name=\"N_statusStr15Stolb3_4\" value=\"V_statusStr15Stolb3_4\" class=\"statusProf\"><br><label class=\"statusProfPunkt\" for=\"statusStr15Stolb3_4\">Подписчик</label><br><input type=\"checkbox\" id=\"statusStr15Stolb3_5\" name=\"N_statusStr15Stolb3_5\" value=\"V_statusStr15Stolb3_5\" class=\"statusProf\"><br><label class=\"statusProfPunkt\" for=\"statusStr15Stolb3_5\">Модератор</label><br><input type=\"checkbox\" id=\"statusStr15Stolb3_6\" name=\"N_statusStr15Stolb3_6\" value=\"V_statusStr15Stolb3_6\" class=\"statusProf\"><br><label class=\"statusProfPunkt\" for=\"statusStr15Stolb3_6\">Админ</label><br><input type=\"checkbox\" id=\"statusStr15Stolb3_7\" name=\"N_statusStr15Stolb3_7\" value=\"V_statusStr15Stolb3_7\" class=\"statusProf\"><br><label class=\"statusProfPunkt\" for=\"statusStr15Stolb3_7\">Не подтвердил</label><br>', NULL),
(3, 15, 'checkbox', 'импорт из клетки ?-?', '2-3', NULL),
(3, 15, 'checkbox', 'импорт из клетки ?-?', '3-3', 0),
(1, 12, 'p', 'class', '123123', 0),
(1, 1, 'img', 'источник ссылки', '1-2', 0);

-- --------------------------------------------------------

--
-- Структура таблицы `registracia`
--

CREATE TABLE `registracia` (
  `ID` int(11) DEFAULT NULL,
  `NAME` varchar(255) COLLATE utf8_bin DEFAULT NULL,
  `URL` varchar(255) COLLATE utf8_bin DEFAULT NULL,
  `CLASS` varchar(255) COLLATE utf8_bin DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin;

--
-- Дамп данных таблицы `registracia`
--

INSERT INTO `registracia` (`ID`, `NAME`, `URL`, `CLASS`) VALUES
(0, 'Логин', 'text', 'registracia btn btn-info'),
(5, 'br', 'text', 'registracia btn btn-info'),
(6, 'parol', 'text', 'registracia btn btn-info'),
(7, 'br', 'text', 'registracia btn btn-info'),
(6, 'parol2', 'text', 'registracia btn btn-info'),
(7, 'br', 'text', 'registracia btn btn-info'),
(8, 'Почта', 'text', 'registracia btn btn-info'),
(9, 'br', 'text', 'registracia btn btn-info'),
(10, 'Capcha', 'text', 'registracia btn btn-info'),
(11, 'Новую нужно ставить', 'redaktor.php', 'registracia btn btn-info'),
(12, 'Кошка кричит весною', 'redaktor.php', 'registracia btn btn-info'),
(13, 'Жизнь оживает снова', 'redaktor.php', 'registracia btn btn-info'),
(14, 'Только не очень быстро', 'redaktor.php', 'registracia btn btn-info'),
(15, 'br', 'text', 'registracia btn btn-info'),
(16, 'Сменить капчу', 'redaktor.php', 'registracia btn btn-info'),
(17, 'Очистить', 'redaktor.php', 'registracia btn btn-info'),
(17, 'Проверить', 'redaktor.php', 'registracia btn btn-info');

-- --------------------------------------------------------

--
-- Структура таблицы `slegka_dfdx`
--

CREATE TABLE `slegka_dfdx` (
  `id` int(11) DEFAULT NULL,
  `metka` varchar(500) COLLATE utf8_bin DEFAULT NULL,
  `zaprosov` int(11) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin;

--
-- Дамп данных таблицы `slegka_dfdx`
--

INSERT INTO `slegka_dfdx` (`id`, `metka`, `zaprosov`) VALUES
(0, '-', 4),
(2, 'rdNowaStr', 95),
(3, 'nastrNowaStranica', 41),
(7, 'dfdx', 3059),
(8, 'html', 838),
(9, 'html5', 267),
(10, 'regular_expressions', 507),
(11, 'xhtml', 11),
(12, 'cmsdfdx', 155),
(13, 'obrazec', 2),
(14, 'git', 70),
(15, 'kommentarii-v-html-', 4),
(16, '-lt-doctype-gt-obyavlenie-tipa-dokumenta-', 5),
(17, 'funkciya-preg_filter-', 6),
(18, 'funkciya-preg_quote', 5),
(19, 'funkciya-preg_grep-', 6),
(20, 'funkciya-preg_match-', 10),
(21, 'funkciya-preg_match_all-', 3),
(22, 'funkciya-preg_-plit-', 8),
(23, 'funkciya-preg_replace-', 44),
(24, 'funkciya-preg_replace_callback-', 9),
(25, 'preg_replace_callback_arrayphp', 4),
(26, 'registraciya-polzovatelya-na-sayte-s-cms-dfdx', 5),
(27, 'kak-opublikovat-statyu-na-sayte-s-cms-dfdx-', 13),
(28, 'nastraivaem-menyu-ispolzuya-admin-panel-', 7),
(29, 'skachivanie-i-nastroyka-github-', 5),
(30, 'dorabotka-tekstovogo-redaktora-ot-cms-dfdx', 10),
(31, 'generaciya-ssh-klyucha-i-dobavlenie-ego-v-githab-', 18),
(32, 'leson', 47),
(33, 'generaciya-nomera-pesel', 19),
(34, 'generaciya-nomera-pe-elopisanie-stranicy', 17),
(35, 'registraciya-administratora-na-sayte-s-cms-dfdx', 4),
(36, 'apidfdx', 6),
(37, 'kak-podklyuchitsya-k-repozitoriyu-github', 44),
(38, 'avtomatizaciya-raboty-s-github', 24),
(39, 'generaciya-nomera-pe-el-', 1),
(40, 'psr', 22),
(41, 'standart-psrpomechen-kak-ustarevshiy-', 28),
(42, 'standart-oformleniya-koda-php-psr', 21),
(43, 'dorabotka-redaktora-new-cms-dfdx-', 21),
(44, 'rabota-s-redaktorom-dfdxnew-zagruzka-izobrazheniy-', 43),
(45, 'html3', 11),
(46, 'struktura-html-stranicy-', 15),
(47, 'zagolovki-hh-', 14),
(48, 'abzacy-html', 32),
(49, 'poluzhirnyy-tekst-i-kursivtegi-b-i-i-', 22),
(50, 'nadstrochnye-i-podstrochnye-simvoly-', 34),
(51, 'svorachivanie-probelov-v-html', 37),
(52, 'tegitrong-i-em-', 24),
(53, 'PanelAdministratora', 3),
(54, 'regular', 2),
(55, 'citaty-blockqwote-i-q', 18);

-- --------------------------------------------------------

--
-- Структура таблицы `statistik`
--

CREATE TABLE `statistik` (
  `html` bigint(20) NOT NULL,
  `elektronik` bigint(20) NOT NULL,
  `SiteUpSec` tinyint(4) NOT NULL,
  `SiteUpMin` tinyint(4) NOT NULL,
  `SiteUpHours` tinyint(4) NOT NULL,
  `SiteUpDay` tinyint(4) NOT NULL,
  `SiteUpWday` tinyint(4) NOT NULL,
  `SiteUpMon` tinyint(4) NOT NULL,
  `SiteUpYears` smallint(6) NOT NULL,
  `SiteUpYday` smallint(6) NOT NULL,
  `SiteUpWeekday` varchar(15) NOT NULL,
  `SiteUpMonth` varchar(15) NOT NULL,
  `BdUpSec` tinyint(4) NOT NULL,
  `BdUpMin` tinyint(4) NOT NULL,
  `BdUpHours` int(11) NOT NULL,
  `BdUpDay` tinyint(4) NOT NULL,
  `BdUpWday` tinyint(20) NOT NULL,
  `BdUpMon` tinyint(4) NOT NULL,
  `BdUpYears` smallint(6) NOT NULL,
  `BdUpYday` smallint(6) NOT NULL,
  `BdUpWeekday` varchar(15) NOT NULL,
  `BdUpMonth` varchar(15) NOT NULL,
  `imiePosTabl24` int(50) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='Таблица будет содержать статистику запросов к другим таблица';

--
-- Дамп данных таблицы `statistik`
--

INSERT INTO `statistik` (`html`, `elektronik`, `SiteUpSec`, `SiteUpMin`, `SiteUpHours`, `SiteUpDay`, `SiteUpWday`, `SiteUpMon`, `SiteUpYears`, `SiteUpYday`, `SiteUpWeekday`, `SiteUpMonth`, `BdUpSec`, `BdUpMin`, `BdUpHours`, `BdUpDay`, `BdUpWday`, `BdUpMon`, `BdUpYears`, `BdUpYday`, `BdUpWeekday`, `BdUpMonth`, `imiePosTabl24`) VALUES
(16502, 0, 33, 4, 19, 8, 4, 4, 2021, 97, 'Thursday', 'April', 41, 4, 19, 8, 4, 4, 2021, 97, 'Thursday', 'April', 0);

-- --------------------------------------------------------

--
-- Структура таблицы `statistik_dfdx`
--

CREATE TABLE `statistik_dfdx` (
  `statik_true` int(11) DEFAULT NULL,
  `n_zapros` int(11) DEFAULT NULL,
  `d_zapros` date DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin;

--
-- Дамп данных таблицы `statistik_dfdx`
--

INSERT INTO `statistik_dfdx` (`statik_true`, `n_zapros`, `d_zapros`) VALUES
(1, 1922370, '2022-02-15');

-- --------------------------------------------------------

--
-- Структура таблицы `status_klienta`
--

CREATE TABLE `status_klienta` (
  `login` varchar(30) COLLATE utf8_bin DEFAULT NULL,
  `parol` varchar(30) COLLATE utf8_bin DEFAULT NULL,
  `mail` varchar(50) COLLATE utf8_bin DEFAULT NULL,
  `status` int(11) DEFAULT NULL,
  `time` int(11) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin;

--
-- Дамп данных таблицы `status_klienta`
--

INSERT INTO `status_klienta` (`login`, `parol`, `mail`, `status`, `time`) VALUES
('alfa54', '123123', 'alexmway1@mail.ru', 5, 1618426782),
('boeslav', '123123', '8902514@mail.ru', 1, 1628871956),
('Liutik', 'q100600Q', 'Liutiaplay@gmail.com', 78538, 1628876110),
('Indi', 'August1978', 'kuzhelev1978@yandex.ru', 1, 1628888529),
('alex25', '123123', 'ergfsd', 1, 524524),
('Stark2', '123123', 'alexmway5578@gmail.com', 1, 1629402191),
('Han_Solo', '123123', 'fff', 1, 333333),
('Nyna', '123123', '1', 1, 111),
('drewniy', '123123', '1', 1, 111),
('Anchorte', '123123', '1', 1, 111),
('supertony', '123123', '1', 1, 111),
('Vasilisk', '123123', '1', 1, 111);

-- --------------------------------------------------------

--
-- Структура таблицы `status_statii_dfdx`
--

CREATE TABLE `status_statii_dfdx` (
  `id` int(11) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin;

--
-- Дамп данных таблицы `status_statii_dfdx`
--

INSERT INTO `status_statii_dfdx` (`id`) VALUES
(-1);

-- --------------------------------------------------------

--
-- Структура таблицы `styl_statii_dfdx`
--

CREATE TABLE `styl_statii_dfdx` (
  `id` int(11) DEFAULT NULL,
  `nomer_styla` int(11) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin;

--
-- Дамп данных таблицы `styl_statii_dfdx`
--

INSERT INTO `styl_statii_dfdx` (`id`, `nomer_styla`) VALUES
(-1, -1),
(2, 3),
(0, 3),
(3, 3),
(4, 3),
(5, 3),
(6, 3),
(7, 3),
(8, 3),
(9, 3),
(10, 3),
(11, 3),
(12, 3),
(13, 3),
(14, 3),
(15, 3),
(16, 3),
(17, 3),
(18, 3),
(19, 3),
(20, 3),
(21, 3),
(22, 3),
(23, 3),
(24, 3),
(25, 3),
(26, 3),
(27, 3),
(28, 3),
(29, 3),
(30, 3),
(31, 3),
(33, 3),
(35, 3),
(34, 3),
(36, 3),
(37, 3);

-- --------------------------------------------------------

--
-- Структура таблицы `tablica_nastroer_dvigka_int`
--

CREATE TABLE `tablica_nastroer_dvigka_int` (
  `id` int(11) DEFAULT NULL,
  `nastr` int(11) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin;

--
-- Дамп данных таблицы `tablica_nastroer_dvigka_int`
--

INSERT INTO `tablica_nastroer_dvigka_int` (`id`, `nastr`) VALUES
(1, 1);

-- --------------------------------------------------------

--
-- Структура таблицы `tablica_tablic`
--

CREATE TABLE `tablica_tablic` (
  `ID` int(11) NOT NULL,
  `NAME` varchar(255) COLLATE utf8_bin DEFAULT NULL,
  `CLASS` int(255) DEFAULT NULL,
  `kol_voKn` int(11) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin;

--
-- Дамп данных таблицы `tablica_tablic`
--

INSERT INTO `tablica_tablic` (`ID`, `NAME`, `CLASS`, `kol_voKn`) VALUES
(1, 'redaktor_up', 0, 5),
(2, 'redaktor_down', 0, 3),
(5, 'menu_parametr_tab', 0, 4),
(7, 'login', 0, 5),
(8, 'podtverdit', 0, 5),
(10, 'menu_stark_up_status', 0, 9),
(11, 'menu_stark_glawnoe', 0, 10),
(13, 'redaktor_nastr7', 0, 10),
(14, 'dolgnosti_starkow', 0, 22),
(15, 'menu_maty', 0, 9),
(16, 'dla_statusob_123', 0, 1),
(17, 'menu_up_dfdx', 0, 8);

-- --------------------------------------------------------

--
-- Структура таблицы `type_menu_po_imeni`
--

CREATE TABLE `type_menu_po_imeni` (
  `name_menu` varchar(100) COLLATE utf8_bin DEFAULT NULL,
  `type_menu` int(11) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin;

--
-- Дамп данных таблицы `type_menu_po_imeni`
--

INSERT INTO `type_menu_po_imeni` (`name_menu`, `type_menu`) VALUES
('menu_stark_glawnoe', 7),
('dolgnosti_starkow', 7),
('redaktor_nastr7', 7),
('menu_test', 5),
('menu_test_6', 5),
('menu_test_5', 2),
('login', 4),
('menu_parametr_tab', 4),
('test9', 9),
('registracia', 4),
('menu_maty', 4),
('menu', 1),
('dla_statusob_123', 1),
('podtverdit', 6),
('strarki_menu_dolgnosti', 9),
('menu_opisania_prawa_dolgnost', 9),
('prawa_dolgnost', 9),
('starki_ustaw', 9),
('menu_stark_up_status', 9),
('news1_redaktor', 9),
('news1_redaktor2', 9),
('myNaUtub_redaktor', 9),
('my_na_youtub_redaktor', 9),
('nash_proekt_redaktor', 9),
('moduly_gelion', 9),
('rasy_stark', 9),
('moduly_tormal', 9),
('{\"RESULT\":\"FALIED\",\"ERROR\":\"player not found\"}', 9),
('moduly_velid', 9),
('moduly_zekt', 9),
('pokaz_modul', 9),
('redaktor_up', 3),
('menu_up_dfdx', 9);

-- --------------------------------------------------------

--
-- Структура таблицы `url_po_id_bd2`
--

CREATE TABLE `url_po_id_bd2` (
  `id` int(11) DEFAULT NULL,
  `url` varchar(1000) COLLATE utf8_bin DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin;

--
-- Дамп данных таблицы `url_po_id_bd2`
--

INSERT INTO `url_po_id_bd2` (`id`, `url`) VALUES
(-1, 'пусто'),
(36, 'news/html3html5xhtml/tegitrong-i-em.php'),
(2, 'news/html3html5xhtml/lt-doctype-gt-obyavlenie-tipa-dokumenta.php'),
(37, 'news/html3html5xhtml/citaty-blockqwote-i-q.php');

-- --------------------------------------------------------

--
-- Структура таблицы `vernul_statii_dfdx`
--

CREATE TABLE `vernul_statii_dfdx` (
  `id` int(11) DEFAULT NULL,
  `komment` varchar(500) COLLATE utf8_bin DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin;

--
-- Индексы сохранённых таблиц
--

--
-- Индексы таблицы `tablica_tablic`
--
ALTER TABLE `tablica_tablic`
  ADD PRIMARY KEY (`ID`);
COMMIT;

/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
