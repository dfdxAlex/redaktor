<?php
namespace class\nonBD\accordionBootstrap;

/**
 * Промежуточный класс, для добавления необходимых для работы свойств.
 * Чтобы воспользоваться экосистемой класса NavBar его следует 
 * отнаследовать. Однако аккордион использует свой набор свойст,
 * поэтому,для добавления нужныз свойств сделан промежуточный
 * абстрактный класс.
 * Использование экосистемы навбара приводит к небольшому раздуванию
 * класса за счёт свойств, но нет повторений для методов шифровки
 * и расшифровки переменных.
 */
abstract class IAccordionPunkt extends \class\nonBD\navBootstrap\INavMenu
{
    /**
     * Система Аккордион наследует систему НавБар. В системе навбар
     * свойства работают с методами и в зивисимости от стилевого класса
     * должна быть его переменная.
     * Чтобы работала структура изменения стилевых классов, необходимо 
     * каждому стилевому классу, которое будет изменено, придумать
     * свою переменную. Используется camelCase. Если у стилевого класса 
     * в шаблоне бутстрапа есть тире, то оно убирается и заменяется
     * на следующую заглавную букву. Если класс из одного слова, то
     * так должно называться его свойство.
     * На пример для стилевого класса accordion, нужна переменная $accordion
     * а для стилевого класса accordion-item, нужна переменная $accordionItem
     */
    protected $accordion = 'accordion';
    protected $accordionItem = 'accordion-item';
    protected $accordionHeader = 'accordion-header';
    protected $accordionButton = 'accordion-button';
    protected $accordionCollapse = 'accordion-collapse';
    protected $collapse = 'collapse';
    protected $show = 'show';
    protected $accordionBody = 'accordion-body';

    /**
     * Переменная хранит в себе заголовок конкретного пункта.
     * Используется классом, создающим конкретный пункт,
     * задается стандартным методом 
     * ->setProperty('button','Заголовок пробный');
     */
    protected $button;
    /**
     * Переменная хранит в себе содержимое текстовое конкретного пункта.
     * Используется классом, создающим конкретный пункт,
     * задается стандартным методом 
     * ->setProperty('mesages','Текст сообщения');
     */
    protected $mesages;

    /**
     * Флаг определяет, будет ли закрываться предыдущий пункт
     * аккордиона, если открыт текущий. По умолчанию закрывается,
     * если задать false методом 
     * ->setProperty('data-bs-parent',false);, то не будет
     */
    protected $dataBsParent = true;

    /**
     * Этот флаг определяет будет ли указан аттрибут 
     * data-bs-toggle а аккордионе
     */
    protected $dataBsToggleBool = true;

    protected $id;

}
